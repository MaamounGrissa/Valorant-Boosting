{"version":3,"sources":["constants/userConstants.js","actions/userActions.js","components/Header.js","components/modules/OrderModal.js","components/modules/RankTab.js","components/modules/PlacementTab.js","components/modules/WinTab.js","constants/settingConstants.js","actions/settingActions.js","components/Home.js","components/modules/LoadingModule.js","components/modules/MessageBox.js","components/Signin.js","components/Register.js","components/modules/AdminDashbordModules/AdminMenuListItems.js","components/modules/BoosterDashbordModules/BoosterMenuListItems.js","components/modules/ClientDashboadModules/ClientMenuListItems.js","constants/chatConstants.js","actions/chatActions.js","components/modules/ChatModule.js","constants/orderConstants.js","actions/orderActions.js","components/modules/ConfirmModal.js","constants/accountConstants.js","actions/accountActions.js","components/modules/ClientDashboadModules/ClientHome.js","components/modules/LoadingBox.js","components/modules/ErrorPage.js","components/modules/Title.js","components/modules/ProfileTab.js","components/modules/AdminDashbordModules/PaiedOrders.js","components/modules/AdminDashbordModules/AddUser.js","components/modules/AdminDashbordModules/AdminListUsers.js","components/modules/AdminDashbordModules/BoostersTab.js","components/modules/AdminDashbordModules/WaitingOrders.js","components/modules/AdminDashbordModules/FinishedOrders.js","components/modules/AdminDashbordModules/BoosterAddModal.js","components/modules/AdminDashbordModules/OrderAddModal.js","components/modules/AdminDashbordModules/BoosterEditModal.js","components/modules/AdminDashbordModules/ProgressOrders.js","components/modules/AdminDashbordModules/AdminHome.js","components/modules/BoosterDashbordModules/ProgressOrdersBooster.js","components/modules/BoosterDashbordModules/BoosterHome.js","components/modules/BoosterDashbordModules/MyOrders.js","components/modules/ClientDashboadModules/OrdersHistroy.js","components/modules/BoosterDashbordModules/BoosterFinishedOrders.js","components/modules/BoosterDashbordModules/BoosterPaiedOrders.js","components/modules/BoosterDashbordModules/CompletedOrders.js","components/modules/SettingEdit.js","components/Dashbord.js","App.js","reportWebVitals.js","constants/blogConstants.js","store.js","reducer/userReducers.js","reducer/orderReducers.js","reducer/chatReducers.js","reducer/accountReducers.js","reducer/blogReducers.js","reducer/settingReducers.js","index.js"],"names":["GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAIL","BOOSTER_ADD_REQUEST","BOOSTER_ADD_SUCCESS","BOOSTER_ADD_FAIL","BOOSTER_EDIT_REQUEST","BOOSTER_EDIT_SUCCESS","BOOSTER_EDIT_FAIL","BOOSTER_DELETE_REQUEST","BOOSTER_DELETE_SUCCESS","BOOSTER_DELETE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_EDIT_REQUEST","USER_EDIT_SUCCESS","USER_EDIT_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_SIGNOUT","AddBooster","name","email","password","rank","paypal","percentage","rule","dispatch","a","type","payload","axios","post","data","response","message","EditBooster","id","DeleteBooster","boosterId","delete","ListUsers","get","Header","props","userInfo","useDispatch","signoutHandler","e","preventDefault","localStorage","removeItem","className","to","target","style","fontSize","onClick","src","alt","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","OrderModal","history","useHistory","order","useState","sdkReady","setSdkReady","myOrder","setMyOrder","ranks","divisions","useEffect","showOrderModal","document","getElementById","classList","add","remove","addPaypalScript","script","createElement","async","onload","body","appendChild","window","userid","_id","account","summoner","server","boostType","startrank","startRank","startdivision","startDivision","rankrating","ratingAmount","desiredrank","desiredRank","desireddivision","desiredDivision","games","wins","duogame","duoGame","chatoffline","chatOffline","specificagents","specificAgents","priorityorder","priorityOrder","withstreaming","withStreaming","price","payement","onClose","width","value","displayType","thousandSeparator","prefix","amount","onSuccess","then","push","OrangeSwitch","withStyles","switchBase","color","backgroundColor","checked","track","Switch","RankTab","useSelector","state","userSignin","setOrder","setShowOrderModal","selectedImage","setSelectedImage","setRank","division","setDivision","setRatingAmount","selectedDesiredImage","setSelectedDesiredImage","setDesiredRank","setDesiredDivision","setServer","setChatOffline","setSpecificAgents","playWithBooster","setPlayWithBooster","setPriorityOrder","setWithStreaming","setPrice","feedback","setFeedback","handleRank","selected","imageLink","handleDivision","handleDesiredRank","handleDesiredDivision","calculatePrice","useCallback","rankBoostingPrices","setting","filter","s","win","GeneratedPrice","j","find","p","i","optionPrice","parseFloat","Grid","container","spacing","item","xs","md","Paper","title","onChange","handleChangeRatingAmount","details","handleServer","handleChatOffline","disabled","handleSpecificAgents","handlePlayWithBooster","handlePriorityOrder","handleWithStreaming","toFixed","handleShowOrderModal","useStyles","makeStyles","theme","root","margin","height","PrettoSlider","thumb","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","borderRadius","rail","Slider","PlacementTab","classes","setGames","placementBoostingPrices","Typography","gutterBottom","valueLabelDisplay","aria-label","step","min","max","newValue","setWins","winBoostingPrices","SETTING_LIST_REQUEST","SETTING_LIST_SUCCESS","SETTING_LIST_FAIL","SETTING_EDIT_REQUEST","SETTING_EDIT_SUCCESS","SETTING_EDIT_FAIL","ListSetting","Home","placement","setPlacement","setWin","settingList","handlePlacement","handleWin","TransitionGroup","component","CSSTransition","in","transitionName","timeout","LoadingModule","MessageBox","variant","children","Signin","setEmail","setPassword","redirect","location","search","split","loading","error","submitHandler","setItem","JSON","stringify","signin","required","placeholder","Register","setName","confirmPassword","setConfirmPassword","confirmError","setConfirmError","userRegister","reload","handleRegister","length","register","handleName","handleEmail","handlePassword","handleConfirmPassword","AdminMenuListItems","ListItem","button","ListItemIcon","ListItemText","primary","BoosterMenuListItems","ClientMenuListItems","CHAT_ADD_REQUEST","CHAT_ADD_SUCCESS","CHAT_ADD_FAIL","CHAT_LIST_REQUEST","CHAT_LIST_SUCCESS","CHAT_LIST_FAIL","MYLIST_CHAT_REQUEST","MYLIST_CHAT_SUCCESS","MYLIST_CHAT_FAIL","MyListChat","orderId","ChatModule","myChat","myChatList","chat","setMessage","reloadChat","reloaded","handleSendMessage","userId","AddChat","map","index","photo","Moment","createdAt","format","onSubmit","autoComplete","MY_LIST_REQUEST","MY_LIST_SUCCESS","MY_LIST_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","CHANGE_STATUS_REQUEST","CHANGE_STATUS_SUCCESS","CHANGE_STATUS_FAIL","ORDER_ADD_REQUEST","ORDER_ADD_SUCCESS","ORDER_ADD_FAIL","ORDER_DELETE_REQUEST","ORDER_DELETE_SUCCESS","ORDER_DELETE_FAIL","ListOrders","MyListOrders","ChangeStatus","status","ConfirmModal","show","qst","Button","onConfirm","autoFocus","ACCOUNT_LIST_REQUEST","ACCOUNT_LIST_SUCCESS","ACCOUNT_LIST_FAIL","ACCOUNT_EDIT_REQUEST","ACCOUNT_EDIT_SUCCESS","ACCOUNT_EDIT_FAIL","ACCOUNT_GET_REQUEST","ACCOUNT_GET_SUCCESS","ACCOUNT_GET_FAIL","ListAccount","MyAccount","ClientHome","myId","getItem","accountGet","loadingAccount","errorAccount","myList","loadingOrders","errorOrders","myOrders","selectedOrder","setSelectedOrder","showConfirmation","setShowConfirmation","setReloadChat","accountName","setAccountName","accountPassword","setAccountPassword","summonerName","setSummonerName","saveAccount","LoadData","myProgressOrders","TableContainer","Table","table","TableHead","TableRow","TableCell","TableBody","isPaused","resumeOrder","paper","rankRating","substring","pauseOrder","LoadingBox","ErrorPage","msg","Title","formControl","minWidth","selectEmpty","inputUpload","display","ProfileTab","errors","setErrors","userEdit","loadingEdit","errorEdit","feedbackEdit","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","setPhoto","lg","noValidate","TextField","label","InputProps","readOnly","URL","createObjectURL","accept","files","htmlFor","startIcon","click","formData","FormData","append","headers","EditUser","catch","err","console","log","PaiedOrders","boosters","clients","paiedOrders","locale","userList","users","orderList","orders","deleteOrder","user","b","AddUser","boosterEdit","setRule","myfeedback","setMyfeedback","showAddUser","FormControl","InputLabel","Select","native","inputProps","AdminListUsers","selectedUser","setSelectedUser","setShowAddUser","BoostersTab","selectedBooster","setSelectedBooster","align","row","scope","onEdit","reloadData","WaitingOrders","FinishedOrders","c","showChangeStatusConfirmation","handleChangeStatus","BoosterAddModal","boosterAdd","setPaypal","setPercentage","showAddBooster","submitSave","OrderAddModal","orderAdd","setUser","setDuoGame","setAccount","setSummoner","setBoostType","setStartRank","setStartDivision","setRankRating","handleBoostType","AddOrder","accounts","acc","showAddOrder","title-data","handleUser","client","parseInt","handleStartRank","handleStartDivision","BoosterEditModal","booster","showEditBooster","ProgressOrders","selectOrder","onDrop","AdminHome","waitingOrders","progressOrders","finishedOrders","accountList","setShowAddBooster","setShowEditBooster","setShowAddOrder","handleOpenEditBooster","handleCloseEditBooster","handleConfirmDropOrder","handleCloseAddOrder","handleCloseAddBooster","ProgressOrdersBooster","onTake","BoosterHome","watingOrders","totalRevenue","payementPending","handleTakeOrder","MyOrders","setQst","setTitle","u","myCompletedOrders","BoosterFinishedOrders","BoosterPaiedOrders","CompletedOrders","SettingEdit","selectedSetting","showEditSetting","changeValue","setChangeValue","settingEdit","loadingSetting","errorSetting","handleSaveSetting","handleCloseEditSetting","Copyright","Date","getFullYear","zIndex","position","top","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","flexGrow","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","overflow","paddingTop","paddingBottom","minHeight","flexDirection","background","fixedHeight","Dashbord","open","setOpen","showSetting","setShowSetting","setSelectedSetting","setShowEditSetting","setTheme","handleSelectSetting","fixedHeightPaper","clsx","CssBaseline","AppBar","Toolbar","IconButton","edge","noWrap","Drawer","Divider","Container","maxWidth","Fragment","path","exact","render","Box","pt","mySetting","App","innerWidth","onscroll","topBar","header","this","oldScroll","scrollY","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","BLOG_LIST_REQUEST","BLOG_LIST_SUCCESS","BLOG_LIST_FAIL","BLOG_DETAILS_REQUEST","BLOG_DETAILS_SUCCESS","BLOG_DETAILS_FAIL","initialState","parse","reducer","combineReducers","action","boosterDelete","loadingRemove","userGet","loadingUser","errorUser","statusChange","orderDelete","chatList","chatAdd","loadingAccounts","errorAccounts","accountEdit","blogList","blog","blogDetails","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.7c04371d.chunk.js","sourcesContent":["export const GET_USER_REQUEST = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAIL = 'GET_USER_FAIL';\r\n\r\nexport const BOOSTER_ADD_REQUEST = 'BOOSTER_ADD_REQUEST';\r\nexport const BOOSTER_ADD_SUCCESS = 'BOOSTER_ADD_SUCCESS';\r\nexport const BOOSTER_ADD_FAIL = 'BOOSTER_ADD_FAIL';\r\n\r\nexport const BOOSTER_EDIT_REQUEST = 'BOOSTER_EDIT_REQUEST';\r\nexport const BOOSTER_EDIT_SUCCESS = 'BOOSTER_EDIT_SUCCESS';\r\nexport const BOOSTER_EDIT_FAIL = 'BOOSTER_EDIT_FAIL';\r\n\r\nexport const BOOSTER_DELETE_REQUEST = 'BOOSTER_DELETE_REQUEST';\r\nexport const BOOSTER_DELETE_SUCCESS = 'BOOSTER_DELETE_SUCCESS';\r\nexport const BOOSTER_DELETE_FAIL = 'BOOSTER_DELETE_FAIL';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\n\r\nexport const USER_EDIT_REQUEST = 'USER_EDIT_REQUEST';\r\nexport const USER_EDIT_SUCCESS = 'USER_EDIT_SUCCESS';\r\nexport const USER_EDIT_FAIL = 'USER_EDIT_FAIL';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_SIGNIN_REQUEST = 'USER_SIGNIN_REQUEST';\r\nexport const USER_SIGNIN_SUCCESS = 'USER_SIGNIN_SUCCESS';\r\nexport const USER_SIGNIN_FAIL = 'USER_SIGNIN_FAIL';\r\nexport const USER_SIGNOUT = 'USER_SIGNIN_SIGNOUT';","import axios from \"axios\";\r\nimport { BOOSTER_ADD_FAIL, BOOSTER_ADD_REQUEST, BOOSTER_ADD_SUCCESS, BOOSTER_DELETE_FAIL, BOOSTER_DELETE_REQUEST, BOOSTER_DELETE_SUCCESS, BOOSTER_EDIT_FAIL, BOOSTER_EDIT_REQUEST, BOOSTER_EDIT_SUCCESS, GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS, USER_EDIT_FAIL, USER_EDIT_REQUEST, USER_EDIT_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\r\n\r\nexport const register = (name, email, password) => async(dispatch) => {\r\n    dispatch({ type: USER_REGISTER_REQUEST, payload: { name, email, password } });\r\n    try {\r\n        const {data} = await axios.post('/api/users/register', {name, email, password});\r\n        dispatch({ type: USER_REGISTER_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const signin = (email, password) => async(dispatch) => {\r\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\r\n    try {\r\n        const {data} = await axios.post('/api/users/signin', {email, password});\r\n        dispatch({ type: USER_SIGNIN_SUCCESS, payload: data});\r\n        localStorage.setItem('userInfo', JSON.stringify(data));\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_SIGNIN_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const AddBooster = (name, email, password, rank, paypal, percentage, rule) => async(dispatch) => {\r\n    dispatch({ type: BOOSTER_ADD_REQUEST, payload: { name, email, password, rank, paypal, percentage, rule } });\r\n    try {\r\n        const {data} = await axios.post('/api/users/addbooster', {name, email, password, rank, paypal, percentage, rule});\r\n        dispatch({ type: BOOSTER_ADD_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: BOOSTER_ADD_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const EditBooster = (id, email, name, password, rank, paypal, percentage, rule) => async(dispatch) => {\r\n    dispatch({ type: BOOSTER_EDIT_REQUEST, payload: { id, email, name, password, rank, paypal, percentage, rule } });\r\n    try {\r\n        const {data} = await axios.post('/api/users/editbooster', {id, email, name, password, rank, paypal, percentage, rule});\r\n        dispatch({ type: BOOSTER_EDIT_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: BOOSTER_EDIT_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const DeleteBooster = (boosterId) => async(dispatch) => { \r\n    dispatch({\r\n        type: BOOSTER_DELETE_REQUEST, payload: boosterId\r\n    });\r\n    try {\r\n        const { data } = await axios.delete(`/api/users/${boosterId}`);\r\n        dispatch({\r\n            type: BOOSTER_DELETE_SUCCESS, payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BOOSTER_DELETE_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const MyProfile = (id) => async(dispatch) => {\r\n    dispatch({ type: GET_USER_REQUEST, payload: { id } });\r\n    try {\r\n        const {data} = await axios.post('/api/users/getmyprofile', {id});\r\n        dispatch({ type: GET_USER_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: GET_USER_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const EditUser = (formData) => async(dispatch) => { \r\n    dispatch({\r\n        type: USER_EDIT_REQUEST, payload: formData\r\n    });\r\n    try {\r\n        const { data } = await axios.post('/api/users/edit', formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        });\r\n        dispatch({\r\n            type: USER_EDIT_SUCCESS, payload: data\r\n        });\r\n        if(data[0]?._id) {\r\n            localStorage.setItem('userInfo', JSON.stringify(data[0]));\r\n        } \r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_EDIT_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const ListUsers = () => async (dispatch) => {\r\n    dispatch({\r\n        type: USER_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await axios.get('/api/users');\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const signout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo');\r\n    dispatch({ type: USER_SIGNOUT });\r\n}","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport { signout } from '../actions/userActions';\r\nimport TwitterIcon from '@material-ui/icons/Twitter';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport InstagramIcon from '@material-ui/icons/Instagram';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\n\r\nexport default function Header(props) {\r\n\r\n    const { userInfo } = props;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const signoutHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signout());\r\n    }\r\n\r\n    return (\r\n        <header id=\"header\">\r\n            <div id=\"topbar\" className=\"topbar\"> \r\n              <nav className=\"topnav\">\r\n                <ul>\r\n                  <div className=\"social-media-container\">\r\n                    <Link to=\"https://twitter.com/?lang=en\" target=\"_blank\"><TwitterIcon className=\"social-icon\" style={{ fontSize: '25px' }} /></Link>\r\n                    <Link to=\"https://facebook.com/\" target=\"_blank\"><FacebookIcon className=\"social-icon\" style={{ fontSize: '25px' }} /></Link>\r\n                    <Link to=\"https://instagram.com/\" target=\"_blank\"><InstagramIcon className=\"social-icon\" style={{ fontSize: '25px' }} /></Link>\r\n                  </div>\r\n                  {\r\n                  userInfo ? (\r\n                        <li className=\"setting\">\r\n                          <Link to=\"/dashbord\">\r\n                            <SettingsIcon style={{ fontSize: '25px' }} /><span>Dashbord</span>\r\n                          </Link>\r\n                          <Link to=\"#signout\" onClick={e => signoutHandler(e)}>\r\n                            <ExitToAppIcon style={{ fontSize: '25px' }} /><span>Logout</span>\r\n                          </Link>\r\n                        </li>\r\n                    ) :\r\n                    (\r\n                      <li className=\"setting\">\r\n                        <Link to=\"/signin\">\r\n                          <FaceIcon style={{ fontSize: '80px' }} /><span>Login</span>\r\n                        </Link>\r\n                        <Link to=\"/register\">\r\n                          <PersonAddIcon style={{ fontSize: '80px' }} /><span>Register</span>\r\n                        </Link>\r\n                      </li>\r\n                    )\r\n                }\r\n                </ul>\r\n              </nav>\r\n            </div>\r\n            <div className=\"navigation\">\r\n              <Link to=\"/\">\r\n                <div className=\"logo-container\">\r\n                      <img src=\"/images/logo.png\" alt=\"App Logo\" />\r\n                      <h1>Valorant Boosting</h1>\r\n                </div>\r\n              </Link>\r\n              <nav className=\"menu-container\">\r\n                {/* <ul>\r\n                  <li><Link to=\"/\">Home</Link></li>\r\n                  <li><a href=\"/about\">About Us</a></li>\r\n                  <li><a href=\"/blog\">FAQ</a></li>\r\n                  <li><a href=\"/home\">Contact</a></li>\r\n                </ul> */}\r\n              </nav>\r\n              <button className=\"mobile-menu\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"mobile-menu-icon\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16m-7 6h7\" />\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </header>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { useHistory } from 'react-router-dom';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nexport default function OrderModal(props) {\r\n\r\n    let history = useHistory();\r\n    const { order, userInfo } = props;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n    const [myOrder, setMyOrder] = useState({});\r\n\r\n    const ranks = [\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\"\r\n    ];\r\n\r\n    const divisions = [\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ];\r\n\r\n    useEffect(() => {\r\n\r\n        if (props.showOrderModal) {\r\n            document.getElementById('header').classList.add('under-element');\r\n        } else {\r\n            document.getElementById('header').classList.remove('under-element');\r\n        }\r\n\r\n        const addPaypalScript = async () => {\r\n            const { data } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = \"text/javascript\";\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if (order) {\r\n            if (!window.paypal) {\r\n                addPaypalScript();\r\n            } else {\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n\r\n        if (order && userInfo) {\r\n            setMyOrder({\r\n                userid : userInfo._id, \r\n                account : '', \r\n                password : '', \r\n                summoner : '', \r\n                server : order.server, \r\n                type : order.boostType, \r\n                startrank : order.startRank || 0, \r\n                startdivision : order.startDivision || 0, \r\n                rankrating : order.ratingAmount || 0, \r\n                desiredrank : order.desiredRank, \r\n                desireddivision : order.desiredDivision, \r\n                games : order.games || 0,\r\n                wins: order.wins || 0,\r\n                duogame : order.duoGame, \r\n                chatoffline : order.chatOffline, \r\n                specificagents : order.specificAgents, \r\n                priorityorder : order.priorityOrder, \r\n                withstreaming : order.withStreaming, \r\n                price : order.price,\r\n                payement : true,\r\n            });\r\n        }\r\n\r\n    }, [order, props.showOrderModal, userInfo]);\r\n\r\n\r\n    const successPayementHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.post(\r\n        '/api/orders/addneworder', {myOrder}\r\n        ).then(() => {\r\n            history.push('/dashbord');\r\n        });\r\n    }\r\n\r\n    if (props.showOrderModal) {\r\n        return (\r\n            <div className=\"modal-container order-modal show\">\r\n                <div className=\"modal-box order-modal\">\r\n                    <div className=\"modal-header order-modal\">\r\n                        <h2>Payement checkout</h2>\r\n                        <button id=\"close-modal\" onClick={props.onClose} >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"order-modal-content\">\r\n                        <div className=\"modal-col\">\r\n                            <div className=\"order-block order-details\">\r\n                                <div className=\"order-block-title\">Your order</div>\r\n                                <div className=\"order-block-content\">\r\n                                    <div className=\"flex start\">\r\n                                        <img src=\"/images/vlrnt.png\" alt=\"Vlrnt\" width=\"90\" />\r\n                                        <div>\r\n                                            {\r\n                                                order.boostType === \"Rank Boosting\" ? (\r\n                                                    <h3>\r\n                                                        {ranks[order.startRank - 1]} {divisions[order.startDivision - 1]}\r\n                                                        &nbsp;\r\n                                                        {order.desiredRank ? 'to' : ''}\r\n                                                        &nbsp;\r\n                                                        {ranks[order.desiredRank - 1]} {divisions[order.desiredDivision - 1]}\r\n                                                    </h3>\r\n                                                ) : order.boostType === \"Placement Boosting\" ? (\r\n                                                    <h3>\r\n                                                        {ranks[order.desiredRank - 1]} {divisions[order.desiredDivision - 1]}\r\n                                                        &nbsp;\r\n                                                        {'Games : ' + order.games}\r\n                                                        &nbsp;\r\n                                                    </h3>\r\n                                                ) : (\r\n                                                    <h3>\r\n                                                        {ranks[order.desiredRank - 1]} {divisions[order.desiredDivision - 1]}\r\n                                                        &nbsp;\r\n                                                        {'Wins : ' + order.wins}\r\n                                                        &nbsp;\r\n                                                    </h3>\r\n                                                )\r\n                                            }\r\n                                            <p>Valorant&nbsp;{ order.boostType }</p>\r\n                                        </div>    \r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"order-block payement-methode\">\r\n                                <div className=\"order-block-title\">Payement gateway</div>\r\n                                <div className=\"order-block-content\">\r\n                                    <div className=\"order-submit\">\r\n                                        <img src=\"/images/paypal-logo.png\" alt=\"paypal\" width=\"200\" />\r\n                                        <div className='price'>\r\n                                            <NumberFormat value={order.price} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                                        </div>\r\n                                    </div>                                        \r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-col\">\r\n                            <div className=\"order-block order-form\">\r\n                                <div className=\"order-block-title\">Paypal Submit</div>\r\n                                <div className=\"order-block-content\">\r\n                                    <div className=\"paypal-container\">\r\n                                        {\r\n                                            sdkReady ? (\r\n                                                <PayPalButton amount={order.price} onSuccess={successPayementHandler}/>\r\n                                            ) : (\r\n                                                'Paypal Not Ready !'\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport OrderModal from './OrderModal.js';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n      color: '#ff9155',\r\n      '&$checked': {\r\n        color: '#ff9155',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#ff9155',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nexport default function RankTab(props) {\r\n\r\n    let history = useHistory();\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [order, setOrder] = useState({});\r\n    const [showOrderModal, setShowOrderModal] = useState(false);\r\n\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [rank, setRank] = useState(0);\r\n    const [division, setDivision] = useState(0);\r\n    const [ratingAmount, setRatingAmount] = useState(10);\r\n    \r\n    const [selectedDesiredImage, setSelectedDesiredImage] = useState('');\r\n    const [desiredRank, setDesiredRank] = useState(0);\r\n    const [desiredDivision, setDesiredDivision] = useState(0);\r\n    const [server, setServer] = useState('');\r\n\r\n    const [chatOffline, setChatOffline] = useState(false);\r\n    const [specificAgents, setSpecificAgents] = useState(false);\r\n    const [playWithBooster, setPlayWithBooster] = useState(false);\r\n    const [priorityOrder, setPriorityOrder] = useState(false);\r\n    const [withStreaming, setWithStreaming] = useState(false);\r\n\r\n    const [price, setPrice] = useState(0);\r\n    const [feedback, setFeedback] = useState(null);\r\n\r\n    const ranks = [\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\"\r\n    ];\r\n\r\n    const handleRank = (e, selected, imageLink) => {\r\n        e.preventDefault();\r\n        if (desiredRank === 0) {\r\n            setRank(selected);\r\n            setSelectedImage(imageLink);\r\n        } else {\r\n            if (selected <= desiredRank) {\r\n                setRank(selected);\r\n                setSelectedImage(imageLink);\r\n            }\r\n        }\r\n        if (rank === desiredRank && division > 0 && desiredDivision > 0) {\r\n            if (division >= desiredDivision) {\r\n                setDesiredDivision(division + 1)\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDivision = (e, selected) => {\r\n        e.preventDefault();\r\n        if (rank === desiredRank) {\r\n            if (selected < desiredDivision) {\r\n                setDivision(selected);\r\n            }\r\n        } else {\r\n            setDivision(selected);\r\n        }\r\n\r\n    }\r\n\r\n    const handleChangeRatingAmount = (e) => {\r\n        e.preventDefault();\r\n        setRatingAmount(e.target.value);\r\n    }\r\n\r\n    const handleDesiredRank = (e, selected, imageLink) => {\r\n        e.preventDefault();\r\n        if (selected >= rank) {\r\n            setDesiredRank(selected)\r\n            setSelectedDesiredImage(imageLink)\r\n        }\r\n    }\r\n\r\n    const handleDesiredDivision = (e, selected) => {\r\n        e.preventDefault();\r\n        if (rank === desiredRank) {\r\n            if (selected > division) {\r\n                setDesiredDivision(selected);\r\n            }\r\n        } else {\r\n            setDesiredDivision(selected);\r\n        }\r\n        \r\n    }\r\n\r\n    const handleServer = (e, details) => {\r\n        e.preventDefault();\r\n        setServer(e.target.value);\r\n    }\r\n\r\n    const handleChatOffline = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(!chatOffline);\r\n    }\r\n\r\n    const handleSpecificAgents = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setSpecificAgents(!specificAgents);\r\n\r\n    }\r\n\r\n    const handlePlayWithBooster = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(false);\r\n        setSpecificAgents(false);\r\n        setWithStreaming(false);\r\n        setPlayWithBooster(!playWithBooster);\r\n    }\r\n\r\n    const handlePriorityOrder = (e) => {\r\n        e.preventDefault();\r\n        setPriorityOrder(!priorityOrder);\r\n    }\r\n\r\n    const handleWithStreaming = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setWithStreaming(!withStreaming);\r\n    } \r\n\r\n    const calculatePrice = useCallback(() => {\r\n        const rankBoostingPrices = props.setting?.filter(s => s.games === 0 && s.win === 0);\r\n        let GeneratedPrice = 0;\r\n\r\n        if (rankBoostingPrices) {\r\n            if (rank === desiredRank) {\r\n                for(let j = division; j < desiredDivision; j++) {\r\n                    GeneratedPrice += rankBoostingPrices.find(p => p.rank === rank && p.division === j && p.desiredRank === desiredRank && p.desiredDivision === j+1)?.amount\r\n                }\r\n            } else {\r\n                for (let i = rank; i <= desiredRank; i++) {\r\n                    if (i === rank) {\r\n                        for (let j = division; j <= 3; j++) {\r\n                            if (j === 3) {\r\n                                GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                            } else {\r\n                                GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === j && p.desiredRank === i && p.desiredDivision === j+1)?.amount\r\n                            }\r\n                        }\r\n                    } else if (i === desiredRank) {\r\n                        if (desiredDivision === 2) {\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 1 && p.desiredRank === i && p.desiredDivision === 2)?.amount\r\n                        }\r\n                        if (desiredDivision === 3) {\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 2 && p.desiredRank === i && p.desiredDivision === 3)?.amount\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                        }\r\n                    } else {\r\n                        GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 1 && p.desiredRank === i && p.desiredDivision === 2)?.amount\r\n                        GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 2 && p.desiredRank === i && p.desiredDivision === 3)?.amount\r\n                        GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                    }  \r\n                }\r\n            }\r\n        }\r\n\r\n        let optionPrice = GeneratedPrice;\r\n    \r\n        if (playWithBooster) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 40);\r\n        }\r\n        if (priorityOrder) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n        if (withStreaming) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n\r\n        if (optionPrice > 0) {\r\n            GeneratedPrice = optionPrice;\r\n        }\r\n\r\n        return parseFloat(GeneratedPrice);\r\n\r\n    }, [desiredDivision, desiredRank, division, playWithBooster, priorityOrder, props.setting, rank, withStreaming]);\r\n\r\n    useEffect(() => {\r\n        if (rank > 0 && desiredRank > 0 && division > 0 && desiredDivision > 0 ) {\r\n            setPrice(calculatePrice);\r\n        }\r\n    }, [calculatePrice, desiredDivision, desiredRank, division, rank])\r\n\r\n    const handleShowOrderModal = (e) => {\r\n        e.preventDefault();\r\n        if (!userInfo) {\r\n            history.push('/signin')\r\n        } else if (userInfo?.rule === 'admin') {\r\n            setFeedback('You are an admin !');\r\n        } else if (userInfo?.rule === 'booster') {\r\n            setFeedback('You are a booster !');\r\n        } else if (rank === 0) {\r\n            setFeedback('Select your start rank !');\r\n        } else if (division === 0) {\r\n            setFeedback('Select your start division !');\r\n        } else if (desiredRank === 0) {\r\n            setFeedback('Select your desired rank !');\r\n        } else if (desiredDivision === 0) {\r\n            setFeedback('Select your desired division !');\r\n        } else if (server === '') {\r\n                setFeedback('Select your server !')\r\n        } else {\r\n            setOrder({\r\n                boostType : 'Rank Boosting',\r\n                startRank : rank,\r\n                startDivision: division,\r\n                ratingAmount: ratingAmount,\r\n                desiredRank: desiredRank,\r\n                desiredDivision: desiredDivision,\r\n                server: server,\r\n                price: price.toFixed(2),\r\n                chatOffline: chatOffline,\r\n                duoGame: playWithBooster,\r\n                specificAgents : specificAgents,\r\n                priorityOrder : priorityOrder,\r\n                withStreaming: withStreaming,\r\n            })\r\n            setShowOrderModal(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid container spacing={5}>\r\n            <Grid item xs={12} md={6} >\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Current Rank</h3>\r\n                                <p>Please select your Current Rank and Division</p>\r\n                            </div>\r\n                            {\r\n                                rank ? (\r\n                                    <div className=\"selected-rank-container\">\r\n                                        <span className=\"selected-rank\">\r\n                                        {ranks[rank - 1]}\r\n                                        </span>\r\n                                        <img src={selectedImage} alt=\"Selected\" />\r\n                                    </div>\r\n                                ) : ('')\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className=\"ranks\">\r\n                            <div className={rank === 1 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 1, '/images/ranks/iron.png')}>\r\n                                <img title=\"Iron\" src=\"/images/ranks/iron.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 2 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 2, '/images/ranks/bronze.png')}>\r\n                                <img title=\"Bronze\" src=\"/images/ranks/bronze.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 3 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 3, '/images/ranks/silver.png')}>\r\n                                <img title=\"Silver\" src=\"/images/ranks/silver.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 4 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 4, '/images/ranks/gold.png')}>\r\n                                <img title=\"Gold\" src=\"/images/ranks/gold.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 5 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 5, '/images/ranks/platinum.png')}>\r\n                                <img title=\"Platinum\" src=\"/images/ranks/platinum.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 6 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 6, '/images/ranks/diamond.png')}>\r\n                                <img title=\"Diamond\" src=\"/images/ranks/diamond.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 7 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 7, '/images/ranks/immortal.png')}>\r\n                                <img title=\"Immortal\" src=\"/images/ranks/immortal.png\" alt=\"Rank\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divisions-container\">\r\n                            <div className=\"divisions\">\r\n                                <div className={division === 1 ? 'division active' : 'division'} onClick={e => handleDivision(e, 1)}>\r\n                                    <strong>I</strong>\r\n                                </div>\r\n                                <div className={division === 2 ? 'division active' : 'division'} onClick={e => handleDivision(e, 2)}>\r\n                                    <strong>II</strong>\r\n                                </div>\r\n                                <div className={division === 3 ? 'division active' : 'division'} onClick={e => handleDivision(e, 3)}>\r\n                                    <strong>III</strong>\r\n                                </div>\r\n                            </div>\r\n                            <select className=\"myselect\" value={ratingAmount} onChange={e => handleChangeRatingAmount(e)} title=\"Current rating amount\">\r\n                                <option value={10}>00 - 20</option>\r\n                                <option value={30}>21 - 40</option>\r\n                                <option value={50}>41 - 60</option>\r\n                                <option value={60}>61 - 80</option>\r\n                                <option value={90}>81 - 100</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Desired Rank</h3>\r\n                                <p>Please select your Desired Rank and Division</p>\r\n                            </div>\r\n                            {\r\n                                desiredRank ? (\r\n                                    <div className=\"selected-rank-container\">\r\n                                        <span className=\"selected-rank\">\r\n                                            {ranks[desiredRank - 1]}\r\n                                        </span>\r\n                                        <img src={selectedDesiredImage} alt=\"Selected\" />\r\n                                    </div>\r\n                                ) : ('')\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className=\"ranks\">\r\n                            <div className={desiredRank === 1 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 1, '/images/ranks/iron.png')}>\r\n                                <img title=\"Iron\" src=\"/images/ranks/iron.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 2 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 2, '/images/ranks/bronze.png')}>\r\n                                <img title=\"Bronze\" src=\"/images/ranks/bronze.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 3 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 3, '/images/ranks/silver.png')}>\r\n                                <img title=\"Silver\" src=\"/images/ranks/silver.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 4 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 4, '/images/ranks/gold.png')}>\r\n                                <img title=\"Gold\" src=\"/images/ranks/gold.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 5 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 5, '/images/ranks/platinum.png')}>\r\n                                <img title=\"Platinum\" src=\"/images/ranks/platinum.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 6 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 6, '/images/ranks/diamond.png')}>\r\n                                <img title=\"Diamond\" src=\"/images/ranks/diamond.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={desiredRank === 7 ? 'rank active' : 'rank'} onClick={e => handleDesiredRank(e, 7, '/images/ranks/immortal.png')}>\r\n                                <img title=\"Immortal\" src=\"/images/ranks/immortal.png\" alt=\"Rank\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divisions-container\">\r\n                            <div className=\"divisions\">\r\n                                <div className={desiredDivision === 1 ? 'division active' : 'division'} onClick={e => handleDesiredDivision(e, 1)}>\r\n                                    <strong>I</strong>\r\n                                </div>\r\n                                <div className={desiredDivision === 2 ? 'division active' : 'division'} onClick={e => handleDesiredDivision(e, 2)}>\r\n                                    <strong>II</strong>\r\n                                </div>\r\n                                <div className={desiredDivision === 3 ? 'division active' : 'division'} onClick={e => handleDesiredDivision(e, 3)}>\r\n                                    <strong>III</strong>\r\n                                </div>\r\n                            </div>\r\n                            <select className=\"myselect\" value={server} onChange={e => handleServer(e)}>\r\n                                <option value={''}>Select Server</option>\r\n                                <option value={'EUW'}>EUW</option>\r\n                                <option value={'EUNE'}>EUNE</option>\r\n                                <option value={'NA'}>NA</option>\r\n                                <option value={'OCE'}>OCE</option>\r\n                                <option value={'TR'}>TR</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} >\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Checkout</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={chatOffline}\r\n                                    onChange={e => handleChatOffline(e)}\r\n                                    name=\"chat-offline\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><SpeakerNotesOffIcon /> APPEAR OFFLINE ON CHAT <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={specificAgents}\r\n                                    onChange={e => handleSpecificAgents(e)}\r\n                                    name=\"specific-agents\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PeopleIcon /> SPECIFIC AGENTS <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={playWithBooster}\r\n                                    onChange={e => handlePlayWithBooster(e)}\r\n                                    name=\"play-with-booster\"\r\n                                    disabled={withStreaming || specificAgents ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PersonAddIcon /> PLAY WITH BOOSTER AT <span>+40%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={priorityOrder}\r\n                                    onChange={e => handlePriorityOrder(e)}\r\n                                    name=\"priority-order\"\r\n                                />\r\n                                <label className=\"switch-label\"><FlashOnIcon /> PRIORITY ORDER AT <span>+20%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={withStreaming}\r\n                                    onChange={e => handleWithStreaming(e)}\r\n                                    name=\"with-streaming\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><VideocamIcon /> WITH STREAMING AT <span>+20%</span></label>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <div className=\"checkout-price\">\r\n                            <NumberFormat value={price.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                        </div>\r\n                        <div className=\"options-submit\">\r\n                            <button onClick={e => handleShowOrderModal(e)} >Boost Now</button>\r\n                            <p>Approximate completion time: 0-5 days</p>\r\n                            {\r\n                                feedback ? (\r\n                                    <p id=\"feedback\">{feedback}</p>\r\n                                ) : ('')\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <OrderModal showOrderModal={showOrderModal} onClose={e => setShowOrderModal(false)} order={order} userInfo={userInfo} />\r\n                </Paper>\r\n            </Grid>\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport OrderModal from './OrderModal.js';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#ff9155',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\n  const OrangeSwitch = withStyles({\r\n    switchBase: {\r\n      color: '#ff9155',\r\n      '&$checked': {\r\n        color: '#ff9155',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#ff9155',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nexport default function PlacementTab(props) {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [order, setOrder] = useState({});\r\n    const [showOrderModal, setShowOrderModal] = useState(false);\r\n\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [rank, setRank] = useState(0);\r\n    const [division, setDivision] = useState(1);\r\n    \r\n    const [games, setGames] = useState(5);\r\n    const [server, setServer] = useState('');\r\n\r\n    const [chatOffline, setChatOffline] = useState(false);\r\n    const [specificAgents, setSpecificAgents] = useState(false);\r\n    const [playWithBooster, setPlayWithBooster] = useState(false);\r\n    const [priorityOrder, setPriorityOrder] = useState(false);\r\n    const [withStreaming, setWithStreaming] = useState(false);\r\n\r\n    const [price, setPrice] = useState(0);\r\n    const [feedback, setFeedback] = useState(null);\r\n\r\n    const handleGames = (e, newValue) => {\r\n        setGames(newValue)\r\n    }\r\n\r\n    const handleRank = (e, selected, imageLink) => {\r\n        e.preventDefault();\r\n        setRank(selected)\r\n        setSelectedImage(imageLink)\r\n    }\r\n\r\n    const handleDivision = (e, selected) => {\r\n        e.preventDefault();\r\n        setDivision(selected)\r\n    }\r\n\r\n    const handleServer = (e, details) => {\r\n        e.preventDefault();\r\n        setServer(e.target.value);\r\n    }\r\n\r\n    const handleChatOffline = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(!chatOffline);\r\n    }\r\n\r\n    const handleSpecificAgents = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setSpecificAgents(!specificAgents);\r\n    }\r\n\r\n    const handlePlayWithBooster = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(false);\r\n        setSpecificAgents(false);\r\n        setWithStreaming(false);\r\n        setPlayWithBooster(!playWithBooster);\r\n    }\r\n\r\n    const handlePriorityOrder = (e) => {\r\n        e.preventDefault();\r\n        setPriorityOrder(!priorityOrder);\r\n    }\r\n\r\n    const handleWithStreaming = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setWithStreaming(!withStreaming);\r\n    }\r\n\r\n    const calculatePrice = useCallback(() => {\r\n        const placementBoostingPrices = props.setting?.filter(s => s.games === 1);\r\n        let GeneratedPrice = 0;\r\n\r\n        if (rank === 0) {\r\n            GeneratedPrice = placementBoostingPrices.find(p => p.desiredRank === 0)?.amount  * games\r\n        } else {\r\n            GeneratedPrice += placementBoostingPrices.find(p => p.desiredRank === rank)?.amount  * games\r\n        }\r\n    \r\n        let optionPrice = GeneratedPrice;\r\n\r\n        if (playWithBooster) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 40);\r\n        }\r\n        if (priorityOrder) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n        if (withStreaming) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n\r\n        if (optionPrice > 0) {\r\n            GeneratedPrice = optionPrice;\r\n        }\r\n\r\n        return GeneratedPrice;\r\n    }, [games, playWithBooster, priorityOrder, props.setting, rank, withStreaming]);\r\n\r\n    useEffect(() => {\r\n        setPrice(calculatePrice);\r\n    }, [calculatePrice])\r\n\r\n    const handleShowOrderModal = (e) => {\r\n        e.preventDefault();\r\n        if (!userInfo) {\r\n            history.push('/signin')\r\n        } else if (userInfo?.rule === 'admin') {\r\n            setFeedback('You are an admin !');\r\n        } else if (userInfo?.rule === 'booster') {\r\n            setFeedback('You are a booster !');\r\n        } else if (rank === 0) {\r\n            setFeedback('Select your start rank !');\r\n        } else if (division === 0) {\r\n            setFeedback('Select your start division !');\r\n        } else if (server === '') {\r\n                setFeedback('Select your server !')\r\n        } else {\r\n            setOrder({\r\n                boostType : 'Placement Boosting',\r\n                desiredRank : rank,\r\n                desiredDivision: division,\r\n                games: games,\r\n                server: server,\r\n                price: price.toFixed(2),\r\n                chatOffline: chatOffline,\r\n                duoGame: playWithBooster,\r\n                specificAgents : specificAgents,\r\n                priorityOrder : priorityOrder,\r\n                withStreaming: withStreaming,\r\n            })\r\n            setShowOrderModal(true);\r\n        }\r\n    }\r\n\r\n    const ranks = [\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\"\r\n    ];\r\n\r\n    return (\r\n        <Grid container spacing={5}>\r\n            <Grid item xs={12} md={6}>\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Season End Rank</h3>\r\n                                <p>Please select your Season End Rank and Division</p>\r\n                            </div>\r\n                            {\r\n                                rank ? (\r\n                                    <div className=\"selected-rank-container\">\r\n                                        <span className=\"selected-rank\">\r\n                                        {ranks[rank - 1]}\r\n                                        </span>\r\n                                        <img src={selectedImage} alt=\"Selected\" />\r\n                                    </div>\r\n                                ) : ('')\r\n                            }\r\n                        </div>\r\n                        <div className=\"ranks placement\">\r\n                            <div className={rank === 0 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 0, '/images/ranks/unranked.png')}>\r\n                                <img title=\"Iron\" src=\"/images/ranks/unranked.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 1 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 1, '/images/ranks/iron.png')}>\r\n                                <img title=\"Iron\" src=\"/images/ranks/iron.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 2 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 2, '/images/ranks/bronze.png')}>\r\n                                <img title=\"Bronze\" src=\"/images/ranks/bronze.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 3 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 3, '/images/ranks/silver.png')}>\r\n                                <img title=\"Silver\" src=\"/images/ranks/silver.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 4 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 4, '/images/ranks/gold.png')}>\r\n                                <img title=\"Gold\" src=\"/images/ranks/gold.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 5 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 5, '/images/ranks/platinum.png')}>\r\n                                <img title=\"Platinum\" src=\"/images/ranks/platinum.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 6 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 6, '/images/ranks/diamond.png')}>\r\n                                <img title=\"Diamond\" src=\"/images/ranks/diamond.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 7 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 7, '/images/ranks/immortal.png')}>\r\n                                <img title=\"Immortal\" src=\"/images/ranks/immortal.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 8 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 8, '/images/ranks/radiant.png')}>\r\n                                <img title=\"Radiant\" src=\"/images/ranks/radiant.png\" alt=\"Rank\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divisions-container\">\r\n                        {\r\n                            rank < 8 ? (\r\n                                <div className=\"divisions\">\r\n                                    <div className={division === 1 ? 'division active' : 'division'} onClick={e => handleDivision(e, 1)}>\r\n                                        <strong>I</strong>\r\n                                    </div>\r\n                                    <div className={division === 2 ? 'division active' : 'division'} onClick={e => handleDivision(e, 2)}>\r\n                                        <strong>II</strong>\r\n                                    </div>\r\n                                    <div className={division === 3 ? 'division active' : 'division'} onClick={e => handleDivision(e, 3)}>\r\n                                        <strong>III</strong>\r\n                                    </div>\r\n                                </div>\r\n                             ) : ('')\r\n                            }\r\n                            <select className=\"myselect\" value={server} onChange={e => handleServer(e)}>\r\n                                <option value={''}>Select Server</option>\r\n                                <option value={'EUW'}>EUW</option>\r\n                                <option value={'EUNE'}>EUNE</option>\r\n                                <option value={'NA'}>NA</option>\r\n                                <option value={'OCE'}>OCE</option>\r\n                                <option value={'TR'}>TR</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"games-input\">\r\n                        <div className={classes.margin} />\r\n                            <Typography gutterBottom>Games</Typography>\r\n                            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" \r\n                                        step={1}\r\n                                        min={1}\r\n                                        max={5} \r\n                                        value={games} \r\n                                        onChange={handleGames} \r\n                                        />\r\n                        <div className={classes.margin} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} >\r\n            <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Checkout</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={chatOffline}\r\n                                    onChange={e => handleChatOffline(e)}\r\n                                    name=\"chat-offline\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><SpeakerNotesOffIcon /> APPEAR OFFLINE ON CHAT <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={specificAgents}\r\n                                    onChange={e => handleSpecificAgents(e)}\r\n                                    name=\"specific-agents\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PeopleIcon /> SPECIFIC AGENTS <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={playWithBooster}\r\n                                    onChange={e => handlePlayWithBooster(e)}\r\n                                    name=\"play-with-booster\"\r\n                                    disabled={withStreaming || specificAgents ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PersonAddIcon /> PLAY WITH BOOSTER AT <span>+40%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={priorityOrder}\r\n                                    onChange={e => handlePriorityOrder(e)}\r\n                                    name=\"priority-order\"\r\n                                />\r\n                                <label className=\"switch-label\"><FlashOnIcon /> PRIORITY ORDER AT <span>+20%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={withStreaming}\r\n                                    onChange={e => handleWithStreaming(e)}\r\n                                    name=\"with-streaming\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><VideocamIcon /> WITH STREAMING AT <span>+20%</span></label>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <div className=\"checkout-price\">\r\n                        <NumberFormat value={price.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                        </div>\r\n                        <div className=\"options-submit\">\r\n                            <button onClick={e => handleShowOrderModal(e)} >Boost Now</button>\r\n                            <p>Approximate completion time: 0-5 days</p>\r\n                            {\r\n                                feedback ? (\r\n                                    <p id=\"feedback\">{feedback}</p>\r\n                                ) : ('')\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <OrderModal showOrderModal={showOrderModal} onClose={e => setShowOrderModal(false)} order={order} userInfo={userInfo} />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react'\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport OrderModal from './OrderModal.js';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#ff9155',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\n  const OrangeSwitch = withStyles({\r\n    switchBase: {\r\n      color: '#ff9155',\r\n      '&$checked': {\r\n        color: '#ff9155',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#ff9155',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\nexport default function PlacementTab(props) {\r\n\r\n    let history = useHistory();\r\n    const classes = useStyles();\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    const [order, setOrder] = useState({});\r\n    const [showOrderModal, setShowOrderModal] = useState(false);\r\n\r\n    const [selectedImage, setSelectedImage] = useState('');\r\n    const [rank, setRank] = useState(0);\r\n    const [division, setDivision] = useState(1);\r\n    \r\n    const [wins, setWins] = useState(5);\r\n    const [server, setServer] = useState('');\r\n\r\n    const [chatOffline, setChatOffline] = useState(false);\r\n    const [specificAgents, setSpecificAgents] = useState(false);\r\n    const [playWithBooster, setPlayWithBooster] = useState(false);\r\n    const [priorityOrder, setPriorityOrder] = useState(false);\r\n    const [withStreaming, setWithStreaming] = useState(false);\r\n\r\n    const [price, setPrice] = useState(0);\r\n    const [feedback, setFeedback] = useState(null);\r\n\r\n    const handleWins = (e, newValue) => {\r\n        setWins(newValue)\r\n    }\r\n\r\n    const handleRank = (e, selected, imageLink) => {\r\n        e.preventDefault();\r\n        setRank(selected)\r\n        setSelectedImage(imageLink)\r\n    }\r\n\r\n    const handleDivision = (e, selected) => {\r\n        e.preventDefault();\r\n        setDivision(selected)\r\n    }\r\n\r\n    const handleServer = (e, details) => {\r\n        e.preventDefault();\r\n        setServer(e.target.value);\r\n    }\r\n\r\n    const handleChatOffline = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(!chatOffline);\r\n    }\r\n\r\n    const handleSpecificAgents = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setSpecificAgents(!specificAgents);\r\n    }\r\n\r\n    const handlePlayWithBooster = (e) => {\r\n        e.preventDefault();\r\n        setChatOffline(false);\r\n        setSpecificAgents(false);\r\n        setWithStreaming(false);\r\n        setPlayWithBooster(!playWithBooster);\r\n    }\r\n\r\n    const handlePriorityOrder = (e) => {\r\n        e.preventDefault();\r\n        setPriorityOrder(!priorityOrder);\r\n    }\r\n\r\n    const handleWithStreaming = (e) => {\r\n        e.preventDefault();\r\n        setPlayWithBooster(false);\r\n        setWithStreaming(!withStreaming);\r\n    }\r\n\r\n    const calculatePrice = useCallback(() => {\r\n        const winBoostingPrices = props.setting?.filter(s => s.win === 1);\r\n        let GeneratedPrice = 0;\r\n\r\n        if (rank === 0) {\r\n            GeneratedPrice = winBoostingPrices.find(p => p.desiredRank === 0)?.amount  * wins\r\n        } else {\r\n            GeneratedPrice += winBoostingPrices.find(p => p.desiredRank === rank)?.amount  * wins\r\n        }\r\n    \r\n        let optionPrice = GeneratedPrice;\r\n\r\n        if (playWithBooster) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 40);\r\n        }\r\n        if (priorityOrder) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n        if (withStreaming) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n\r\n        if (optionPrice > 0) {\r\n            GeneratedPrice = optionPrice;\r\n        }\r\n\r\n        return GeneratedPrice;\r\n    }, [playWithBooster, priorityOrder, props.setting, rank, wins, withStreaming]);\r\n\r\n    useEffect(() => {\r\n        if (rank) {\r\n            setPrice(calculatePrice);\r\n        }\r\n    }, [calculatePrice, rank])\r\n\r\n    const handleShowOrderModal = (e) => {\r\n        e.preventDefault();\r\n        if (!userInfo) {\r\n            history.push('/signin')\r\n        } else if (userInfo?.rule === 'admin') {\r\n            setFeedback('You are an admin !');\r\n        } else if (userInfo?.rule === 'booster') {\r\n            setFeedback('You are a booster !');\r\n        } else if (rank === 0) {\r\n            setFeedback('Select your start rank !');\r\n        } else if (division === 0) {\r\n            setFeedback('Select your start division !');\r\n        } else if (server === '') {\r\n                setFeedback('Select your server !')\r\n        } else {\r\n            setOrder({\r\n                boostType : 'Competitive Wins',\r\n                desiredRank : rank,\r\n                desiredDivision: division,\r\n                wins: wins,\r\n                server: server,\r\n                price: price.toFixed(2),\r\n                chatOffline: chatOffline,\r\n                duoGame: playWithBooster,\r\n                specificAgents : specificAgents,\r\n                priorityOrder : priorityOrder,\r\n                withStreaming: withStreaming,\r\n            })\r\n            setShowOrderModal(true);\r\n        }\r\n    }\r\n\r\n    const ranks = [\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\"\r\n    ];\r\n\r\n    return (\r\n        <Grid container spacing={5}>\r\n            <Grid item xs={12} md={6}>\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Season End Rank</h3>\r\n                                <p>Please select your Season End Rank and Division</p>\r\n                            </div>\r\n                            {\r\n                                rank ? (\r\n                                    <div className=\"selected-rank-container\">\r\n                                        <span className=\"selected-rank\">\r\n                                        {ranks[rank - 1]}\r\n                                        </span>\r\n                                        <img src={selectedImage} alt=\"Selected\" />\r\n                                    </div>\r\n                                ) : ('')\r\n                            }\r\n                        </div>\r\n                        <div className=\"ranks placement\">\r\n                            <div className={rank === 1 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 1, '/images/ranks/iron.png')}>\r\n                                <img title=\"Iron\" src=\"/images/ranks/iron.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 2 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 2, '/images/ranks/bronze.png')}>\r\n                                <img title=\"Bronze\" src=\"/images/ranks/bronze.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 3 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 3, '/images/ranks/silver.png')}>\r\n                                <img title=\"Silver\" src=\"/images/ranks/silver.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 4 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 4, '/images/ranks/gold.png')}>\r\n                                <img title=\"Gold\" src=\"/images/ranks/gold.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 5 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 5, '/images/ranks/platinum.png')}>\r\n                                <img title=\"Platinum\" src=\"/images/ranks/platinum.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 6 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 6, '/images/ranks/diamond.png')}>\r\n                                <img title=\"Diamond\" src=\"/images/ranks/diamond.png\" alt=\"Rank\" />\r\n                            </div>\r\n                            <div className={rank === 7 ? 'rank active' : 'rank'} onClick={e => handleRank(e, 7, '/images/ranks/immortal.png')}>\r\n                                <img title=\"Immortal\" src=\"/images/ranks/immortal.png\" alt=\"Rank\" />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"divisions-container\">\r\n                        {\r\n                            rank < 8 ? (\r\n                                <div className=\"divisions\">\r\n                                    <div className={division === 1 ? 'division active' : 'division'} onClick={e => handleDivision(e, 1)}>\r\n                                        <strong>I</strong>\r\n                                    </div>\r\n                                    <div className={division === 2 ? 'division active' : 'division'} onClick={e => handleDivision(e, 2)}>\r\n                                        <strong>II</strong>\r\n                                    </div>\r\n                                    <div className={division === 3 ? 'division active' : 'division'} onClick={e => handleDivision(e, 3)}>\r\n                                        <strong>III</strong>\r\n                                    </div>\r\n                                </div>\r\n                             ) : ('')\r\n                            }\r\n                            <select className=\"myselect\" value={server} onChange={e => handleServer(e)}>\r\n                                <option value={''}>Select Server</option>\r\n                                <option value={'EUW'}>EUW</option>\r\n                                <option value={'EUNE'}>EUNE</option>\r\n                                <option value={'NA'}>NA</option>\r\n                                <option value={'OCE'}>OCE</option>\r\n                                <option value={'TR'}>TR</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n                <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"games-input\">\r\n                        <div className={classes.margin} />\r\n                            <Typography gutterBottom>Wins</Typography>\r\n                            <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" \r\n                                        step={1}\r\n                                        min={1}\r\n                                        max={10} \r\n                                        value={wins} \r\n                                        onChange={handleWins} \r\n                                        />\r\n                        <div className={classes.margin} />\r\n                        </div>\r\n                    </div>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item xs={12} md={6} >\r\n            <Paper className=\"grid-paper\">\r\n                    <div className=\"ranks-container\">\r\n                        <div className=\"ranks-header\">\r\n                            <div>\r\n                                <h3>Checkout</h3>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"options\">\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={chatOffline}\r\n                                    onChange={e => handleChatOffline(e)}\r\n                                    name=\"chat-offline\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><SpeakerNotesOffIcon /> APPEAR OFFLINE ON CHAT <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={specificAgents}\r\n                                    onChange={e => handleSpecificAgents(e)}\r\n                                    name=\"specific-agents\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PeopleIcon /> SPECIFIC AGENTS <span>FREE</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={playWithBooster}\r\n                                    onChange={e => handlePlayWithBooster(e)}\r\n                                    name=\"play-with-booster\"\r\n                                    disabled={withStreaming || specificAgents ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><PersonAddIcon /> PLAY WITH BOOSTER AT <span>+40%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={priorityOrder}\r\n                                    onChange={e => handlePriorityOrder(e)}\r\n                                    name=\"priority-order\"\r\n                                />\r\n                                <label className=\"switch-label\"><FlashOnIcon /> PRIORITY ORDER AT <span>+20%</span></label>\r\n                            </div>\r\n\r\n                            <div className=\"switch-container\">\r\n                                <OrangeSwitch\r\n                                    checked={withStreaming}\r\n                                    onChange={e => handleWithStreaming(e)}\r\n                                    name=\"with-streaming\"\r\n                                    disabled={playWithBooster ? true : false}\r\n                                />\r\n                                <label className=\"switch-label\"><VideocamIcon /> WITH STREAMING AT <span>+20%</span></label>\r\n                            </div>\r\n                        \r\n                        </div>\r\n                        <div className=\"checkout-price\">\r\n                        <NumberFormat value={price.toFixed(2)} displayType={'text'} thousandSeparator={true} prefix={'$'} />\r\n                        </div>\r\n                        <div className=\"options-submit\">\r\n                            <button onClick={e => handleShowOrderModal(e)} >Boost Now</button>\r\n                            <p>Approximate completion time: 0-5 days</p>\r\n                            {\r\n                                feedback ? (\r\n                                    <p id=\"feedback\">{feedback}</p>\r\n                                ) : ('')\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <OrderModal showOrderModal={showOrderModal} onClose={e => setShowOrderModal(false)} order={order} userInfo={userInfo} />\r\n                </Paper>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","export const SETTING_LIST_REQUEST = 'SETTING_LIST_REQUEST';\r\nexport const SETTING_LIST_SUCCESS = 'SETTING_LIST_SUCCESS';\r\nexport const SETTING_LIST_FAIL = 'SETTING_LIST_FAIL';\r\n\r\nexport const SETTING_EDIT_REQUEST = 'SETTING_EDIT_REQUEST';\r\nexport const SETTING_EDIT_SUCCESS = 'SETTING_EDIT_SUCCESS';\r\nexport const SETTING_EDIT_FAIL = 'SETTING_EDIT_FAIL';","import axios from 'axios';\r\nimport { SETTING_EDIT_FAIL, SETTING_EDIT_REQUEST, SETTING_EDIT_SUCCESS, SETTING_LIST_FAIL, SETTING_LIST_REQUEST, SETTING_LIST_SUCCESS } from '../constants/settingConstants';\r\n\r\nexport const ListSetting = () => async (dispatch) => {\r\n    dispatch({\r\n        type: SETTING_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await axios.get('/api/setting');\r\n        dispatch({\r\n            type: SETTING_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: SETTING_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const EditSetting = (id, newValue) => async(dispatch) => {\r\n    dispatch({ type: SETTING_EDIT_REQUEST, payload: { id, newValue } });\r\n    try {\r\n        const {data} = await axios.post('/api/setting/edit', { id, newValue });\r\n        dispatch({ type: SETTING_EDIT_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: SETTING_EDIT_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport RankTab from './modules/RankTab.js';\r\nimport PlacementTab from './modules/PlacementTab.js';\r\nimport WinTab from './modules/WinTab.js'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListSetting } from '../actions/settingActions.js';\r\n\r\n\r\nfunction Home () {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [rank, setRank] = useState(true);\r\n    const [placement, setPlacement] = useState(false);\r\n    const [win, setWin] = useState(false);\r\n\r\n    const settingList = useSelector((state) => state.settingList);\r\n    const { setting } = settingList;\r\n\r\n    const handleRank = (e) => {\r\n        e.preventDefault();\r\n        setPlacement(false);\r\n        setRank(true);\r\n        setWin(false);\r\n    }\r\n\r\n    const handlePlacement= (e) => {\r\n        e.preventDefault();\r\n        setRank(false);\r\n        setPlacement(true);\r\n        setWin(false);\r\n    }\r\n\r\n    const handleWin= (e) => {\r\n        e.preventDefault();\r\n        setRank(false);\r\n        setPlacement(false);\r\n        setWin(true);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(ListSetting());\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <div className=\"intro-container\">\r\n            <div className=\"intro-content\">\r\n                <img src=\"/images/vlrnt.png\" alt=\"vlnrt\" />\r\n                <h2>VLRNT Boosting</h2>\r\n                <p>Leading VALORANT Boosting Service</p>\r\n                <div className=\"intro-actions\">\r\n                    <button className={rank ? 'active' : ''} onClick={e => handleRank(e)} >Rank Boosting</button>\r\n                    <button className={placement ? 'active' : ''} onClick={e => handlePlacement(e)} >Placements</button>\r\n                    <button className={win ? 'active' : ''} onClick={e => handleWin(e)} >Competitive Wins</button>\r\n                </div>\r\n                <div className=\"intro-tabs\">\r\n                <TransitionGroup component={null}>\r\n                {\r\n                rank ? (\r\n                    <CSSTransition\r\n                    in={rank}\r\n                    transitionName=\"myanimation\"\r\n                    timeout={300}>\r\n                        <RankTab setting={setting} />\r\n                    </CSSTransition >\r\n                ) : placement ? (\r\n                    <CSSTransition\r\n                    in={placement}\r\n                    transitionName=\"myanimation\"\r\n                    timeout={300}>\r\n                        <PlacementTab setting={setting} />\r\n                    </CSSTransition >\r\n                ) : win ? (\r\n                    <CSSTransition\r\n                    in={win}\r\n                    transitionName=\"myanimation\"\r\n                    timeout={300}>\r\n                        <WinTab setting={setting} />\r\n                    </CSSTransition >\r\n                ) : ('')\r\n                }\r\n                </TransitionGroup>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\n\r\nexport default function LoadingModule() {\r\n    return (\r\n        <div className=\"loading-module\">\r\n            <img src=\"/images/loading-buffering.gif\" alt=\"Loading\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MessageBox(props) {\r\n    return (\r\n        <div className={`alert alert-${props.variant || 'info'}`} >\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { signin } from '../actions/userActions';\r\nimport LoadingModule from './modules/LoadingModule';\r\nimport MessageBox from './modules/MessageBox';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nexport default function Signin(props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const redirect = props.location.search ? props.location.search.split('=')[1] : '/';\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    const dispatch = useDispatch();\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        dispatch(signin(email, password))\r\n    }\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            props.history.push(redirect);\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"register-content\">\r\n                <form>\r\n                    <h3>Login</h3>\r\n                    <input required type=\"email\" placeholder=\"E-mail adress\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    <input required type=\"password\" placeholder=\"Password\" value={password} onChange={e => setPassword(e.target.value)}/>\r\n                    <button onClick={e => submitHandler(e)} ><PersonIcon /><span>Login</span></button>\r\n                    { loading && <LoadingModule /> }\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport LoadingModule from './modules/LoadingModule';\r\nimport MessageBox from './modules/MessageBox';\r\nimport { register } from '../actions/userActions';\r\n\r\nexport default function Register(props) {\r\n    const dispatch = useDispatch();\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [confirmError, setConfirmError] = useState('');\r\n\r\n    const redirect = props.location.search \r\n    ? props.location.search.split('=')[1] \r\n    : '/';\r\n\r\n    const userRegister = useSelector((state) => state.userRegister);\r\n    const { userInfo, loading, error } = userRegister;\r\n\r\n    useEffect(() => {\r\n        if (userInfo) {\r\n            props.history.push(redirect);\r\n            window.location.reload();\r\n        }\r\n    }, [props.history, redirect, userInfo]);\r\n\r\n    const handleName = (e) => {\r\n        e.preventDefault();\r\n        setName(e.target.value);\r\n    }\r\n\r\n    const handleEmail = (e) => {\r\n        e.preventDefault();\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePassword = (e) => {\r\n        e.preventDefault();\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleConfirmPassword = (e) => {\r\n        e.preventDefault();\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n        if (confirmPassword === password) {\r\n            if (password.length < 8) {\r\n                setConfirmError('Password is too short');\r\n            } else {\r\n                dispatch(register(name, email, password));\r\n            }\r\n        } else {\r\n            setConfirmError('Password not confirmed');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"register-container\">\r\n            <div className=\"register-content\">\r\n                <form>\r\n                    <h3>Create Account</h3>\r\n                    <input type=\"text\" placeholder=\"Your name\" value={name} onChange={e => handleName(e)}/>\r\n                    <input type=\"email\" placeholder=\"E-mail adress\" value={email} onChange={e => handleEmail(e)}/>\r\n                    <input type=\"password\" placeholder=\"Password\" value={password} onChange={e => handlePassword(e)}/>\r\n                    <input type=\"password\" placeholder=\"Confirm Password\" value={confirmPassword} onChange={e => handleConfirmPassword(e)}/>\r\n                    <button onClick={e => handleRegister(e)}><PersonAddIcon /><span>Register</span></button>\r\n                    { loading && <LoadingModule /> }\r\n                    { error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n                    { confirmError && <MessageBox variant=\"danger\">{confirmError}</MessageBox>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { Link } from 'react-router-dom';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\r\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\r\n\r\nexport default function AdminMenuListItems() {\r\n  return (\r\n    <div>\r\n        <Link to='/dashbord'>\r\n            <ListItem button >\r\n                <ListItemIcon>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/paiedorders'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <CloudDoneIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Paied orders\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/listusers'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <GroupAddIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"List users\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/profile'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <AssignmentIndIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Edit Profile\" />\r\n            </ListItem>\r\n        </Link>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport { Link } from 'react-router-dom';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport CloudDoneIcon from '@material-ui/icons/CloudDone';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\n\r\nexport default function BoosterMenuListItems() {\r\n  return (\r\n    <div>\r\n        <Link to='/dashbord'>\r\n            <ListItem button >\r\n                <ListItemIcon>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/myorders'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <BusinessCenterIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"My orders\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/completedorders'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <CloudDoneIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Completed orders\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/profile'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <AssignmentIndIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Edit Profile\" />\r\n            </ListItem>\r\n        </Link>\r\n    </div>\r\n  )\r\n};","import React from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function ClientMenuListItems() {\r\n  return (\r\n    <div>\r\n        <Link to='/dashbord'>\r\n            <ListItem button >\r\n                <ListItemIcon>\r\n                    <DashboardIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Home Panel\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/history'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <ViewListIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Orders History\" />\r\n            </ListItem>\r\n        </Link>\r\n\r\n        <Link to='/dashbord/profile'>\r\n            <ListItem button>\r\n                <ListItemIcon>\r\n                    <AssignmentIndIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Edit Profile\" />\r\n            </ListItem>\r\n        </Link>\r\n    </div>\r\n  )\r\n};","export const CHAT_ADD_REQUEST = 'CHAT_ADD_REQUEST';\r\nexport const CHAT_ADD_SUCCESS = 'CHAT_ADD_SUCCESS';\r\nexport const CHAT_ADD_FAIL = 'CHAT_ADD_FAIL';\r\n\r\nexport const CHAT_LIST_REQUEST = 'CHAT_LIST_REQUEST';\r\nexport const CHAT_LIST_SUCCESS = 'CHAT_LIST_SUCCESS';\r\nexport const CHAT_LIST_FAIL = 'CHAT_LIST_FAIL';\r\n\r\nexport const MYLIST_CHAT_REQUEST = 'MYLIST_CHAT_REQUEST';\r\nexport const MYLIST_CHAT_SUCCESS = 'MYLIST_CHAT_SUCCESS';\r\nexport const MYLIST_CHAT_FAIL = 'MYLIST_CHAT_FAIL';","import axios from 'axios';\r\nimport { CHAT_ADD_FAIL, CHAT_ADD_REQUEST, CHAT_ADD_SUCCESS, CHAT_LIST_FAIL, CHAT_LIST_REQUEST, CHAT_LIST_SUCCESS, MYLIST_CHAT_FAIL, MYLIST_CHAT_REQUEST, MYLIST_CHAT_SUCCESS } from \"../constants/chatConstants\";\r\n\r\nexport const MyListChat = (orderId) => async (dispatch) => {\r\n    dispatch({\r\n        type: MYLIST_CHAT_REQUEST, payload: {orderId}\r\n    });\r\n    try {\r\n        const { data } = await axios.post('/api/chat/getorderchat', {orderId});\r\n        dispatch({\r\n            type: MYLIST_CHAT_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: MYLIST_CHAT_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const ListChat = () => async (dispatch) => {\r\n    dispatch({\r\n        type: CHAT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await axios.get('/api/chat');\r\n        dispatch({\r\n            type: CHAT_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CHAT_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const AddChat = (userId, orderId, message) => async(dispatch) => {\r\n    dispatch({ type: CHAT_ADD_REQUEST, payload: {userId, orderId, message} });\r\n    try {\r\n        const {data} = await axios.post('/api/chat/add', {userId, orderId, message});\r\n        dispatch({ type: CHAT_ADD_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CHAT_ADD_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport Moment from 'moment';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AddChat, MyListChat } from '../../actions/chatActions';\r\n\r\nexport default function ChatModule(props) {\r\n    let myChat;\r\n    const dispatch = useDispatch();\r\n    const { order } = props;\r\n    const myChatList = useSelector( state => state.myChatList);\r\n    const {loading, error, chat} = myChatList;\r\n    const [message, setMessage] = useState('');\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n    useEffect(() => {\r\n       if (order || props.reloadChat) {\r\n           dispatch(MyListChat(order));\r\n           props.reloaded();\r\n       }\r\n    }, [dispatch, order, props, props.reloadChat]);\r\n\r\n    const handleSendMessage = (e) => {\r\n        e.preventDefault();\r\n        if(message !== '') {\r\n            dispatch(AddChat(userInfo._id, order, message)).then(() => {\r\n                dispatch(MyListChat(order));\r\n                setMessage('');\r\n            });\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return (\r\n            <div className=\"chat-loading\">\r\n                <img src=\"/images/loading-36.gif\" alt=\"Loading\" />\r\n            </div>\r\n        );\r\n    } else if (error) {\r\n        return null;\r\n    } else {\r\n        myChat = chat;\r\n        return (\r\n            <div className=\"chat-module-container\">\r\n                <div id=\"chat-messages\" className=\"chat-messages\">\r\n                    {\r\n                        myChat.map((message, index) =>\r\n                            <div key={index} \r\n                                className={message.userId === userInfo._id ? 'message-container' : 'message-container reverse'}>\r\n                                    {\r\n                                        message.userId === userInfo._id && userInfo.photo ? (\r\n                                            <img \r\n                                                title={userInfo.name}\r\n                                                src={userInfo.photo} \r\n                                                alt=\"User\" />\r\n                                        ) : (\r\n                                            <img \r\n                                                title={message.userId === userInfo._id ? userInfo.name : \"Booster\"}\r\n                                                src=\"/images/default-profile.png\" \r\n                                                alt=\"User\" />\r\n                                        )\r\n                                    }\r\n                                    <span className=\"chat-message\">\r\n                                        {message.message}\r\n                                        <em>{Moment(message.createdAt).format('DD/MM/YY hh:mm')}</em>\r\n                                    </span>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"chat-action\">\r\n                    <form id=\"chatsend\" onSubmit={e => handleSendMessage(e)} autoComplete=\"off\">\r\n                        <textarea type=\"text\" placeholder=\"Enter your message ...\" onChange={e => setMessage(e.target.value)}>\r\n                        </textarea>\r\n                        <button type=\"submit\" onClick={e => handleSendMessage(e)} >\r\n                            <SendIcon />\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","export const MY_LIST_REQUEST = 'MY_LIST_REQUEST';\r\nexport const MY_LIST_SUCCESS = 'MY_LIST_SUCCESS';\r\nexport const MY_LIST_FAIL = 'MY_LIST_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const CHANGE_STATUS_REQUEST = 'CHANGE_STATUS_REQUEST';\r\nexport const CHANGE_STATUS_SUCCESS = 'CHANGE_STATUS_SUCCESS';\r\nexport const CHANGE_STATUS_FAIL = 'CHANGE_STATUS_FAIL';\r\n\r\nexport const ORDER_ADD_REQUEST = 'ORDER_ADD_REQUEST';\r\nexport const ORDER_ADD_SUCCESS = 'ORDER_ADD_SUCCESS';\r\nexport const ORDER_ADD_FAIL = 'ORDER_ADD_FAIL';\r\n\r\nexport const ORDER_EDIT_REQUEST = 'ORDER_EDIT_REQUEST';\r\nexport const ORDER_EDIT_SUCCESS = 'ORDER_EDIT_SUCCESS';\r\nexport const ORDER_EDIT_FAIL = 'ORDER_EDIT_FAIL';\r\n\r\nexport const ORDER_DELETE_REQUEST = 'ORDER_DELETE_REQUEST';\r\nexport const ORDER_DELETE_SUCCESS = 'ORDER_DELETE_SUCCESS';\r\nexport const ORDER_DELETE_FAIL = 'ORDER_DELETE_FAIL';","import axios from \"axios\";\r\nimport { CHANGE_STATUS_FAIL, CHANGE_STATUS_REQUEST, CHANGE_STATUS_SUCCESS, MY_LIST_FAIL, MY_LIST_REQUEST, MY_LIST_SUCCESS, ORDER_ADD_FAIL, ORDER_ADD_REQUEST, ORDER_ADD_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS } from \"../constants/orderConstants\";\r\n\r\nexport const ListOrders = () => async (dispatch) => {\r\n    dispatch({\r\n        type: ORDER_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await axios.get('/api/orders');\r\n        dispatch({\r\n            type: ORDER_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\nexport const MyListOrders = (id) => async (dispatch) => {\r\n    dispatch({\r\n        type: MY_LIST_REQUEST, payload: { id } });\r\n    try {\r\n        const { data } = await axios.post('/api/orders/mylistorders', { id })\r\n        dispatch({\r\n            type: MY_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: MY_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\n// Add Order\r\n\r\nexport const AddOrder = (\r\n    userid, \r\n    account, \r\n    password, \r\n    summoner, \r\n    server, \r\n    type, \r\n    startrank, \r\n    startdivision, \r\n    rankrating, \r\n    desiredrank, \r\n    desireddivision, \r\n    games,\r\n    wins, \r\n    duogame, \r\n    chatoffline, \r\n    specificagents, \r\n    priorityorder, \r\n    withstreaming, \r\n    price,\r\n    payement,\r\n) => async(dispatch) => {\r\n    dispatch({ type: ORDER_ADD_REQUEST, payload: { \r\n        userid, \r\n        account, \r\n        password, \r\n        summoner, \r\n        server, \r\n        type, \r\n        startrank, \r\n        startdivision, \r\n        rankrating, \r\n        desiredrank, \r\n        desireddivision, \r\n        games,\r\n        wins,\r\n        duogame, \r\n        chatoffline, \r\n        specificagents, \r\n        priorityorder, \r\n        withstreaming, \r\n        price,\r\n        payement,\r\n     } });\r\n    try {\r\n        const {data} = await axios.post('/api/orders/add', {\r\n            userid, \r\n            account, \r\n            password, \r\n            summoner, \r\n            server, \r\n            type, \r\n            startrank, \r\n            startdivision, \r\n            rankrating, \r\n            desiredrank, \r\n            desireddivision, \r\n            games,\r\n            wins,\r\n            duogame, \r\n            chatoffline, \r\n            specificagents, \r\n            priorityorder, \r\n            withstreaming, \r\n            price,\r\n            payement,\r\n        });\r\n        dispatch({ type: ORDER_ADD_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ORDER_ADD_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n};\r\n\r\n// Order Change Status\r\n\r\nexport const ChangeStatus = (id, status, boosterId) => async(dispatch) => {\r\n    dispatch({ type: CHANGE_STATUS_REQUEST, payload: { id, status, boosterId } });\r\n    try {\r\n        const {data} = await axios.post('/api/orders/changestatus', { id, status, boosterId });\r\n        dispatch({ type: CHANGE_STATUS_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: CHANGE_STATUS_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\n// Delete Order\r\n\r\nexport const DeleteOrder = (orderId) => async(dispatch) => { \r\n    dispatch({\r\n        type: ORDER_DELETE_REQUEST, payload: orderId\r\n    });\r\n    try {\r\n        const { data } = await axios.delete(`/api/orders/${orderId}`);\r\n        dispatch({\r\n            type: ORDER_DELETE_SUCCESS, payload: data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: ORDER_DELETE_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function ConfirmModal(props) {\r\n \r\n  if(!props.show) {\r\n      return null\r\n  } else {\r\n    return (\r\n        <div className=\"modal-container show\">\r\n            <div className=\"modal-box confirmation-box\">\r\n            <div className=\"confirmation-content\">\r\n                <h3>{ props.title }</h3>\r\n                <p>{ props.qst }</p>\r\n                <div className=\"confirmation-actions\">\r\n                <Button onClick={props.onClose} color=\"default\">\r\n                    Cancel\r\n                </Button>\r\n                <Button onClick={props.onConfirm} color=\"secondary\" autoFocus>\r\n                    {props.title?.split(' ')[0]}\r\n                </Button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </div>\r\n      );\r\n  }\r\n}\r\n","export const ACCOUNT_LIST_REQUEST = 'ACCOUNT_LIST_REQUEST';\r\nexport const ACCOUNT_LIST_SUCCESS = 'ACCOUNT_LIST_SUCCESS';\r\nexport const ACCOUNT_LIST_FAIL = 'ACCOUNT_LIST_FAIL';\r\n\r\nexport const ACCOUNT_EDIT_REQUEST = 'ACCOUNT_EDIT_REQUEST';\r\nexport const ACCOUNT_EDIT_SUCCESS = 'ACCOUNT_EDIT_SUCCESS';\r\nexport const ACCOUNT_EDIT_FAIL = 'ACCOUNT_EDIT_FAIL';\r\n\r\nexport const ACCOUNT_GET_REQUEST = 'ACCOUNT_GET_REQUEST';\r\nexport const ACCOUNT_GET_SUCCESS = 'ACCOUNT_GET_SUCCESS';\r\nexport const ACCOUNT_GET_FAIL = 'ACCOUNT_GET_FAIL';","import axios from 'axios';\r\nimport { ACCOUNT_EDIT_FAIL, ACCOUNT_EDIT_REQUEST, ACCOUNT_EDIT_SUCCESS, ACCOUNT_GET_FAIL, ACCOUNT_GET_REQUEST, ACCOUNT_GET_SUCCESS, ACCOUNT_LIST_FAIL, ACCOUNT_LIST_REQUEST, ACCOUNT_LIST_SUCCESS } from '../constants/accountConstants';\r\n\r\nexport const ListAccount = () => async (dispatch) => {\r\n    dispatch({\r\n        type: ACCOUNT_LIST_REQUEST\r\n    });\r\n    try {\r\n        const { data } = await axios.get('/api/accounts');\r\n        dispatch({\r\n            type: ACCOUNT_LIST_SUCCESS, payload: data \r\n        });\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ACCOUNT_LIST_FAIL, payload: error.message \r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const EditAccount = (userId, name, password, summoner) => async(dispatch) => {\r\n    dispatch({ type: ACCOUNT_EDIT_REQUEST, payload: { userId, name, password, summoner } });\r\n    try {\r\n        const {data} = await axios.post('/api/accounts/edit', {userId, name, password, summoner});\r\n        dispatch({ type: ACCOUNT_EDIT_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ACCOUNT_EDIT_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}\r\n\r\nexport const MyAccount = (id) => async(dispatch) => {\r\n    dispatch({ type: ACCOUNT_GET_REQUEST, payload: { id } });\r\n    try {\r\n        const {data} = await axios.post('/api/accounts/getmyaccount', {id});\r\n        dispatch({ type: ACCOUNT_GET_SUCCESS, payload: data});\r\n    } catch(error) {\r\n        dispatch({\r\n            type: ACCOUNT_GET_FAIL, \r\n            payload: \r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        });\r\n    }\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport ChatModule from '../ChatModule.js'\r\nimport { ChangeStatus, MyListOrders } from '../../../actions/orderActions.js';\r\nimport ConfirmModal from '../ConfirmModal.js'\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { EditAccount, MyAccount } from '../../../actions/accountActions';\r\n\r\n\r\nexport default function ClientHome(props) {\r\n    const dispatch = useDispatch();\r\n    const { classes, theme, userInfo } = props;\r\n\r\n    const myId = localStorage.getItem('myId') || false;\r\n\r\n    const accountGet = useSelector((state) => state.accountGet);\r\n    const { loadingAccount, errorAccount, account } = accountGet;\r\n\r\n    const myList = useSelector( state => state.myList);\r\n    const {loadingOrders, errorOrders, myOrders} = myList;\r\n\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [reloadChat, setReloadChat] = useState(false);\r\n    const [accountName, setAccountName] = useState(null);\r\n    const [accountPassword, setAccountPassword] = useState(null);\r\n    const [summonerName, setSummonerName] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (myId) {\r\n            dispatch(MyListOrders(myId));\r\n            dispatch(MyAccount(myId));\r\n        }            \r\n    }, [dispatch, myId]);\r\n\r\n    //  Pause ORDER\r\n\r\n    const showPauseConfirmation = (orderId) => {\r\n        setSelectedOrder(orderId);\r\n        setShowConfirmation(true);\r\n    }\r\n  \r\n    const pauseOrder = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'Pause', null)).then(() => {\r\n            LoadData();\r\n            setShowConfirmation(false);\r\n          })\r\n    }\r\n\r\n    const resumeOrder = (e, orderId) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(orderId, 'Resume', null)).then(() => {\r\n            LoadData();\r\n          })\r\n    }\r\n\r\n    const saveAccount = (e) => {\r\n        e.preventDefault();\r\n        dispatch(EditAccount(\r\n            myId, \r\n            accountName ? accountName : account ? account.name : '', \r\n            accountPassword ? accountPassword : account ? account.password : '',\r\n            summonerName ? summonerName : account ? account.summoner : ''\r\n        ));\r\n        LoadData();\r\n    }\r\n\r\n    // Reload Data\r\n\r\n    const LoadData = () => {\r\n        dispatch(MyListOrders(myId));\r\n        dispatch(MyAccount(myId));\r\n        setSelectedOrder(null)\r\n    }\r\n\r\n    const ranks = [\r\n        \"iron\",\r\n        \"bronze\",\r\n        \"silver\",\r\n        \"gold\",\r\n        \"platinum\",\r\n        \"diamond\",\r\n        \"immortal\"\r\n    ];\r\n\r\n    const divisions = [\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ]\r\n\r\n    const ratingAmount = [\r\n        \" 0-20\",\r\n        \"21-40\",\r\n        \"41-60\",\r\n        \"61-80\",\r\n        \"81-100\",\r\n    ]\r\n\r\n    if (loadingOrders || loadingAccount) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (errorOrders || errorAccount) {\r\n        return ( <MessageBox variant=\"danger\">{errorOrders || errorAccount}</MessageBox> );\r\n    } else {\r\n        const myProgressOrders = myOrders.filter(order => order.status === \"Looking for a booster\" || order.status === \"In progress\")\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {/* Select Order */}\r\n                <Grid item xs={12}>\r\n                    <Paper className={theme && userInfo.rule === 'client' ? \"mypaper-box\" : 'normal-paper'} >\r\n                    <div className=\"account-form\">\r\n                        <h3>Valorant account informations</h3>\r\n                        <form>\r\n                            <div className=\"client-account-formgroup\">\r\n                                <span>Account name</span>\r\n                                <input type=\"text\" placeholder=\"Account name\" \r\n                                value={accountName ? accountName : account.name} onChange={e => setAccountName(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"client-account-formgroup\">\r\n                                <span>Account password</span>\r\n                                <input type=\"text\" placeholder=\"Account password\" \r\n                                value={accountPassword ? accountPassword : account.password} onChange={e => setAccountPassword(e.target.value)} />\r\n                            </div>\r\n                            <div className=\"client-account-formgroup\">\r\n                                <span>Summoner name</span>\r\n                                <input type=\"text\" placeholder=\"Summoner name\" \r\n                                value={summonerName ? summonerName : account.summoner} onChange={e => setSummonerName(e.target.value)} />\r\n                            </div>\r\n                            \r\n                            <button type=\"submit\" onClick={e => saveAccount(e)}><SaveIcon /> Save</button> \r\n                        </form>\r\n                    </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                    <div className={theme && userInfo.rule === 'client' ? \"myorder-select client\" : \"myorder-select\"}>\r\n                        <h3>Select Order</h3>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table + 'client-table'} aria-label=\"simple table\">\r\n                            <TableHead className=\"custom-thead\">\r\n                                <TableRow>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell>Price</TableCell>\r\n                                <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    myProgressOrders.map(order =>\r\n                                        <TableRow key={order._id} \r\n                                            className={selectedOrder === order._id ? 'mytablerow active' : 'mytablerow'} \r\n                                            onClick={() => setSelectedOrder(order._id)}>\r\n                                            <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                                            <TableCell>{order.status}</TableCell>\r\n                                            <TableCell>{order.price.toFixed(2)}&nbsp;$</TableCell>\r\n                                            <TableCell> \r\n                                                {\r\n                                                    order.isPaused ? (\r\n                                                        <button \r\n                                                            className='paid-button blue'\r\n                                                            onClick={(e) => resumeOrder(e, order._id)}>\r\n                                                            Resume\r\n                                                        </button>\r\n                                                    ) : (\r\n                                                        <button \r\n                                                            className='paid-button red' \r\n                                                            onClick={() => showPauseConfirmation(order._id)}>\r\n                                                            Pause\r\n                                                        </button>\r\n                                                    )\r\n                                                }  \r\n                                                \r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </Grid>\r\n                {/* Order Informations */}\r\n                <Grid item xs={12} md={4} className={theme && userInfo.rule === 'client' ? \"client-dashbord\" : ''}>\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            myOrders.find(order => order._id === selectedOrder) ? (\r\n                                <div className=\"myorders-infos\">\r\n                                    <h4>{myOrders.find(order => order._id === selectedOrder).boostType}</h4>\r\n                                    {\r\n                                        myOrders.find(order => order._id === selectedOrder).boostType === 'Rank Boosting' ? (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[myOrders.find(order => order._id === selectedOrder).startRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[myOrders.find(order => order._id === selectedOrder).startRank - 1]}</span>\r\n                                                        <span>{divisions[myOrders.find(order => order._id === selectedOrder).startDivision - 1]}</span>\r\n                                                        <span className=\"mini-text\">{ratingAmount[(myOrders.find(order => order._id === selectedOrder).rankRating / 10) - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <ForwardIcon />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[myOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : myOrders.find(order => order._id === selectedOrder).boostType === 'Placement Boosting' ? (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[myOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <h5>{myOrders.find(order => order._id === selectedOrder).games + ' Games'}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[myOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[myOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <h5>{myOrders.find(order => order._id === selectedOrder).wins + ' Wins'}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    <div className=\"bordred-container\">\r\n                                        <div className=\"flex between\">\r\n                                            <span>Boost Queue</span><strong>{myOrders.find(order => order._id === selectedOrder).duoGame ? 'Duo Boost' : 'Single Boost'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Server</span><strong>{myOrders.find(order => order._id === selectedOrder).server}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Specific Agents</span><strong>{myOrders.find(order => order._id === selectedOrder).specificAgents ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Priority order</span><strong>{myOrders.find(order => order._id === selectedOrder).priorityOrder ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>With streaming</span><strong>{myOrders.find(order => order._id === selectedOrder).withStreaming ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"default-display\">\r\n                                    <h4>Order informations</h4>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Chat */}\r\n                <Grid item xs={12} md={4} className={theme && userInfo.rule === 'client' ? \"client-dashbord\" : ''}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Chat</div>\r\n                            <div className=\"reload-chat\"><CachedIcon onClick={e => setReloadChat(true)} /></div>\r\n                            <div className=\"button-container\">\r\n                                <select \r\n                                    value={selectedOrder ? selectedOrder : 0} \r\n                                    onChange={e => setSelectedOrder(e.target.value)}\r\n                                    className=\"orders-select\">\r\n                                    <option value={0}>Select Order</option>\r\n                                    {\r\n                                        myOrders.map(order =>\r\n                                            <option key={order._id} value={order._id}> {order._id.substring(order._id.length - 5)} | {Moment(order.createdAt).format('DD/MM/YY')}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"paper-content chat\">\r\n                            <ChatModule order={selectedOrder} reloadChat={reloadChat} reloaded={e => setReloadChat(false)} />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <ConfirmModal\r\n                    show={showConfirmation} \r\n                    qst='Are you sure to pause this order ?'\r\n                    title='Pause Order'\r\n                    onConfirm={e => pauseOrder(e)} \r\n                    onClose={() => {setShowConfirmation(false)}}>\r\n                </ConfirmModal>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function LoadingBox() {\r\n    return (\r\n        <div className=\"loading\">\r\n            <img src=\"/images/loading.gif\" alt=\"Loading\" />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ErrorPage(props) {\r\n    const { msg } = props;\r\n   \r\n    return (\r\n        <div className=\"product-page eroor-page\">\r\n            <div className=\"head-page\">\r\n                <img src=\"/images/banner_error_404.jpg\" alt=\"Category\" />\r\n            </div>\r\n            <div className=\"not-found\">\r\n                <p className =\"not-found-message\">{ msg }</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nexport default function Title(props) {\r\n  return (\r\n    <Typography component=\"h2\" variant=\"h6\" color=\"primary\" gutterBottom>\r\n      {props.children}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nTitle.propTypes = {\r\n  children: PropTypes.node,\r\n};","import React, { useState } from 'react';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Title from './Title';\r\nimport MessageBox from './MessageBox';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { EditUser } from '../../actions/userActions';\r\nimport LoadingBox from './LoadingBox';\r\nimport ErrorPage from './ErrorPage';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n      width: '100%',\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n    },\r\n    inputUpload: {\r\n        display: 'none',\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function ProfileTab(props) {\r\n\r\n    const { theme } = props;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    const [errors, setErrors] = useState(null);\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const userEdit = useSelector( state => state.userEdit);\r\n    const {loadingEdit, errorEdit, feedbackEdit} = userEdit;\r\n    const [name, setName] = useState(userInfo.name);\r\n    const [password, setPassword] = useState('');\r\n    const [newPassword, setNewPassword] = useState('');\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState('');\r\n    const [photo, setPhoto] = useState(null);\r\n       \r\n    const handleName = (event) => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    };\r\n\r\n    const handleNewPassword = (event) => {\r\n        setNewPassword(event.target.value)\r\n    };\r\n\r\n    const handleConfirmNewPassword = (event) => {\r\n        setConfirmNewPassword(event.target.value)\r\n    };\r\n\r\n    const handlePhoto = (event) => {\r\n        setPhoto(event.target.files[0])\r\n    }\r\n\r\n    const submitEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!password ) {\r\n            setErrors('Enter your old password');\r\n            return;\r\n        }\r\n\r\n        if(newPassword && newPassword !== '' && newPassword !== confirmNewPassword) {\r\n            setErrors('Confirm Password Error');\r\n            return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('id', userInfo._id);\r\n        formData.append('name', name);\r\n        photo ? formData.append('photo', photo) : formData.append('photo', userInfo.photo);\r\n        formData.append('password', password);\r\n        formData.append('newPassword', newPassword);\r\n\r\n        dispatch(EditUser(formData)).then(() => {\r\n            // window.location.reload();\r\n        }).catch((err) => {\r\n            console.log(err);\r\n        });\r\n    }\r\n\r\n    if(loading) {\r\n        return <LoadingBox />\r\n    } else if (error){\r\n        return <ErrorPage msg=\"Login to have access to dashbord\" />\r\n    } else {\r\n        return (\r\n            <div className={theme && userInfo.rule === 'client' ? 'client-profile' : '' }>\r\n                <Grid container spacing={3} >\r\n                    <Grid item xs={12} md={6} lg={6}>\r\n                        <form className={classes.root} noValidate autoComplete=\"off\">\r\n\r\n                            <div className='table-header-container'>\r\n                                <Title>Edit Profile</Title>\r\n                            </div>\r\n                            \r\n                            <TextField type=\"text\" label=\"Name\" variant=\"outlined\" onChange={e => handleName(e)} value={name} />\r\n                            \r\n                            <TextField type=\"text\" label=\"Email\" variant=\"outlined\"  value={userInfo.email} InputProps={{readOnly: true}} />\r\n\r\n                            <TextField type=\"password\" label=\"Old Password\" variant=\"outlined\" onChange={e => handlePassword(e)} value={password} />\r\n\r\n                            <TextField type=\"password\" label=\"New Password\" variant=\"outlined\" onChange={e => handleNewPassword(e)} value={newPassword} />\r\n\r\n                            <TextField type=\"password\" label=\"Confirm New Password\" variant=\"outlined\" onChange={e => handleConfirmNewPassword(e)} value={confirmNewPassword} />\r\n                            \r\n                        \r\n                        </form>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6} lg={6}>\r\n                        <div className='admin-image-container'>\r\n                        {\r\n                            photo ? (\r\n                                <img src={URL.createObjectURL(photo)} alt='Add' className='image-display' />\r\n                            ) : userInfo.photo === '' ? (\r\n                                <img src='/images/add-image.png' alt='Add' className='add-image' />\r\n                            ) : (\r\n                                <img src={userInfo.photo} alt='profile' className='image-display' />\r\n                            ) \r\n                        }\r\n                        </div>\r\n                        <div className='select-image'>\r\n                            <input\r\n                                accept=\"image/*\"\r\n                                className='input-upload'\r\n                                id=\"select-image-input\"\r\n                                type=\"file\"\r\n                                onChange={e => handlePhoto(e)}\r\n                            />\r\n                            <label htmlFor=\"contained-button-file\">\r\n                                <Button variant=\"contained\"\r\n                                        color=\"default\"\r\n                                        className={classes.button}\r\n                                        startIcon={<CloudUploadIcon />}\r\n                                        onClick={() => {document.getElementById('select-image-input').click()}}\r\n                                >\r\n                                Profile Photo\r\n                                </Button>\r\n                            </label>\r\n                        </div>\r\n                    </Grid>            \r\n            </Grid>\r\n            <Grid container spacing={3} >\r\n                <Grid item xs={12} md={6} lg={6}>\r\n                    <Button variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={theme && userInfo.rule === 'client' ? \"dark-btn\" : \"mybtn\" }\r\n                                startIcon={<SaveIcon />}\r\n                                onClick={submitEdit}>\r\n                                Save&nbsp;&nbsp;\r\n                                {\r\n                                    loadingEdit && (\r\n                                        <img src=\"/images/loading-buffering.gif\" width='20' alt=\"Loading\" />\r\n                                    )\r\n                                }\r\n                        </Button>\r\n                        {\r\n                            feedbackEdit && feedbackEdit[1] ? (\r\n                                <MessageBox variant={feedbackEdit[0] ? 'info' : 'danger'}>{feedbackEdit[1]}</MessageBox>\r\n                            ) : errorEdit ? (\r\n                                <MessageBox variant='danger'>{errorEdit}</MessageBox>\r\n                            ) : errors ? (\r\n                                <MessageBox variant='danger'>{errors}</MessageBox>\r\n                            ) : ( '' )\r\n                        }\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DeleteOrder, ListOrders } from '../../../actions/orderActions.js';\r\nimport { ListUsers } from '../../../actions/userActions.js';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function PaiedOrders(props) {\r\n    let boosters, clients, paiedOrders;\r\n    Moment.locale('en');\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [selectedOrder, setSelectedOrder] = useState('');\r\n\r\n    const showDeleteConfirmation = (boosterId) => {\r\n      setSelectedOrder(boosterId);\r\n      setShowConfirmation(true);\r\n    }\r\n\r\n    const deleteOrder = (e) => {\r\n        e.preventDefault();\r\n        dispatch(DeleteOrder(selectedOrder)).then(() => {\r\n            LoadData();\r\n            setShowConfirmation(false);\r\n        })\r\n    }\r\n\r\n     // Reload Data\r\n\r\n     const LoadData = () => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        boosters = users?.filter(user => user.rule === 'booster');\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        paiedOrders = orders?.filter(order => order.status === 'Paied');\r\n        return (\r\n        <TableContainer component={Paper}>\r\n            <h3 className=\"mytitle\">Paied Orders</h3>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className=\"custom-thead\">\r\n                <TableRow>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell>Booster</TableCell>\r\n                <TableCell>Percentage</TableCell>\r\n                <TableCell>Price</TableCell>\r\n                <TableCell>Booster price</TableCell>\r\n                <TableCell>Rest</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                <TableCell>Action</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {paiedOrders.map((order) => (\r\n                <TableRow key={order._id}>\r\n                    <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                    <TableCell>{clients.find(b => b._id === order.userId).name}</TableCell>\r\n                    <TableCell>{boosters.find(b => b._id === order.boosterId)?.name}</TableCell>\r\n                    <TableCell>{boosters.find(b => b._id === order.boosterId)?.percentage}</TableCell>\r\n                    <TableCell>{order.price.toFixed(2)}&nbsp;$</TableCell>\r\n                    <TableCell>{(((order.price / 100) * boosters.find(b => b._id === order.boosterId)?.percentage)).toFixed(2)}&nbsp;$</TableCell>\r\n                    <TableCell className=\"bold\">{((order.price - ((order.price / 100) * boosters.find(b => b._id === order.boosterId)?.percentage))).toFixed(2)}&nbsp;$</TableCell>\r\n                    <TableCell><span className=\"status-output paied\">{order.status}</span></TableCell>\r\n                    <TableCell><DeleteForeverIcon className=\"delete-btn\" onClick={() => showDeleteConfirmation(order._id)} /></TableCell>\r\n                </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            </Table>\r\n            <ConfirmModal\r\n                show={showConfirmation} \r\n                qst=\"Are you sure to delete order ?\"\r\n                title=\"Delete Order\"\r\n                onConfirm={e => deleteOrder(e)} \r\n                onClose={() => {setShowConfirmation(false)}}>\r\n            </ConfirmModal>\r\n        </TableContainer>\r\n        );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { Grid, TextField } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport Button from '@material-ui/core/Button';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport MessageBox from '../MessageBox.js';\r\nimport { AddBooster, EditBooster } from '../../../actions/userActions.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n      },\r\n      formControl: {\r\n          margin: theme.spacing(1),\r\n          minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n      },\r\n      inputUpload: {\r\n          display: 'none',\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function AddUser(props) {\r\n\r\n    const { user } = props;\r\n    const boosterEdit = useSelector((state) => state.boosterEdit);\r\n    const { loading } = boosterEdit;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState(null);\r\n    const [password, setPassword] = useState(null);\r\n    const [email, setEmail] = useState(null);\r\n    const [confirmPassword, setConfirmPassword] = useState(null);\r\n    const [rule, setRule] = useState(null);\r\n    const [myfeedback, setMyfeedback] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n    \r\n    const handleRule = (event) => {\r\n        setRule(event.target.value)\r\n    };\r\n\r\n    const handleName = (event) => {\r\n        setName(event.target.value)\r\n    };\r\n\r\n    const handleEmail = (event) => {\r\n        setEmail(event.target.value)\r\n    };\r\n\r\n    const handlePassword = (event) => {\r\n        setPassword(event.target.value)\r\n    };\r\n\r\n    const handleConfirmPassword = (event) => {\r\n        setConfirmPassword(event.target.value)\r\n    };\r\n\r\n    const submitEdit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (user) {\r\n\r\n            if(password !== confirmPassword) {\r\n                setErrors('Confirm Password Error !');\r\n                return;\r\n            }\r\n\r\n            dispatch(EditBooster(user._id, email || null, name || null , password || null, null, null, null, rule || null)).then(() => {\r\n                setMyfeedback('User updated !')\r\n            });\r\n            \r\n        } else {\r\n            if (!password || password === '' || password.length < 8 ) {\r\n                setErrors('Password lenght less than 8 !');\r\n                return;\r\n            }\r\n    \r\n            if(password !== confirmPassword) {\r\n                setErrors('Confirm Password Error !');\r\n                return;\r\n            }\r\n    \r\n            dispatch(AddBooster(name, email, password, null, null, null, rule)).then(() => {\r\n                setMyfeedback('New User added');\r\n                setName(null);\r\n                setEmail(null);\r\n                setPassword(null);\r\n                setConfirmPassword(null);\r\n                setRule(null);\r\n            });\r\n        }\r\n    }\r\n\r\n  \r\n    if (props.showAddUser) {\r\n        return (\r\n            <div className=\"modal-container show\">\r\n                <div className=\"modal-box\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                                <h2>{user ? 'Edit ' : 'Add '} User</h2>\r\n                                <button id=\"close-modal\" onClick={props.onClose} >\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                    </svg>\r\n                                </button>\r\n                        </div>\r\n                        <Grid container spacing={3}>\r\n                            <Grid item xs={12} >\r\n                                <div className=\"form-center\">\r\n                                    <form  className={classes.root} noValidate autoComplete=\"off\">\r\n                                        \r\n                                        <TextField type=\"text\" label=\"Name\" variant=\"outlined\" \r\n                                            onChange={e => handleName(e)} \r\n                                            value={name || user?.name} />\r\n                                        \r\n                                        <TextField type=\"email\" label=\"Email\" variant=\"outlined\" \r\n                                            onChange={e => handleEmail(e)} \r\n                                            value={email || user?.email}  />\r\n            \r\n                                        <TextField type=\"password\" label=\"Password\" variant=\"outlined\" \r\n                                            onChange={e => handlePassword(e)} \r\n                                            value={password} />\r\n            \r\n                                        <TextField type=\"password\" label=\"Confirm New Password\" variant=\"outlined\" \r\n                                            onChange={e => handleConfirmPassword(e)} \r\n                                            value={confirmPassword} />\r\n                                    \r\n                                        <FormControl className={classes.formControl}>\r\n                                            <InputLabel htmlFor=\"rules-select\">User Type</InputLabel>\r\n                                            <Select\r\n                                            native\r\n                                            value={rule || user?.rule}\r\n                                            onChange={e => handleRule(e)}\r\n                                            inputProps={{\r\n                                                name: 'rules',\r\n                                                id: 'rules-select',\r\n                                            }}\r\n                                            >\r\n                                            <option value={'booster'}>Booster</option>\r\n                                            <option value={'client'}>Customer</option>\r\n                                            <option value={'admin'}>Admin</option>\r\n                                            </Select>\r\n                                        </FormControl>\r\n                                    \r\n                                    </form>\r\n                                </div>\r\n                            </Grid>           \r\n                    </Grid>\r\n                    <Grid container spacing={3} >\r\n                        <Grid item xs={12}>\r\n                        <div className=\"form-center\">\r\n                            <Button variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        className=\"mybtn\"\r\n                                        startIcon={<SaveIcon />}\r\n                                        onClick={submitEdit}>\r\n                                        {\r\n                                            user ? 'Edit  ' : 'Add  '\r\n                                        }\r\n                                        {\r\n                                            loading ? (\r\n                                                <img src=\"/images/loading-buffering.gif\" width='20' alt=\"Loading\" />\r\n                                        ) : ( '' )\r\n                                        }\r\n                                        \r\n                                </Button>\r\n                                {\r\n                                    myfeedback && myfeedback !== '' ? (\r\n                                        <MessageBox>{myfeedback}</MessageBox>\r\n                                    ) : errors ? (\r\n                                        <MessageBox variant='danger'>{errors}</MessageBox>\r\n                                    ) : ( '' )\r\n                                }\r\n                        </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    </div>\r\n                </div>\r\n        </div>)\r\n    } else {\r\n        return null\r\n    }\r\n        \r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { DeleteBooster, ListUsers } from '../../../actions/userActions.js';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport AddUser from './AddUser.js';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function AdminListUsers(props) {\r\n    \r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n   \r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [selectedUser, setSelectedUser] = useState('');\r\n    const [showAddUser, setShowAddUser] = useState(false);\r\n\r\n   \r\n    const selectEditUser = (userId) => {\r\n        setSelectedUser(userId);\r\n        setShowAddUser(true);\r\n    }\r\n\r\n    const handleCloseAddUser = () => {\r\n        setShowAddUser(false);\r\n        LoadData();\r\n    }\r\n\r\n    const handleOpenAddUser = () => {\r\n        setSelectedUser(null);\r\n        setShowAddUser(true);\r\n    }\r\n\r\n    const showDeleteConfirmation = (userId) => {\r\n        setSelectedUser(userId);\r\n        setShowConfirmation(true);\r\n      }\r\n  \r\n      const deleteUser = () => {\r\n        dispatch(DeleteBooster(selectedUser._id)).then(() => {\r\n          LoadData();\r\n          setShowConfirmation(false);\r\n        })\r\n      }\r\n\r\n     // Reload Data\r\n\r\n     const LoadData = () => {\r\n        dispatch(ListUsers());\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (loading) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        return (\r\n            <Grid container >\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                            <div className=\"paper-content\">\r\n                            <TableContainer component={Paper}>\r\n                            <div className=\"paper-header\">\r\n                                <h3 className=\"mytitle\">List Users</h3>\r\n                                <div className=\"button-container\">\r\n                                    <button onClick={() => handleOpenAddUser()}><AddCircleIcon /></button>\r\n                                </div>\r\n                            </div>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead className=\"custom-thead\">\r\n                                <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>Role</TableCell>\r\n                                <TableCell>Paypal</TableCell>\r\n                                <TableCell>Percentage</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {users.map((user) => (\r\n                                <TableRow key={user._id}>\r\n                                    <TableCell>{user.name}</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>{user.rule}</TableCell>\r\n                                    <TableCell>{user.paypal}</TableCell>\r\n                                    <TableCell>{user.percentage}</TableCell>\r\n                                    <TableCell className='admin-actions'>\r\n                                        <EditIcon onClick={() => selectEditUser(user)} />\r\n                                        <DeleteForeverIcon onClick={() => showDeleteConfirmation(user)} />\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            </Table>\r\n                            <ConfirmModal\r\n                                show={showConfirmation} \r\n                                qst=\"Are you sure to delete user ?\"\r\n                                title=\"Delete User\"\r\n                                onConfirm={e => deleteUser(e)} \r\n                                onClose={() => {setShowConfirmation(false)}}>\r\n                            </ConfirmModal>\r\n                        </TableContainer>\r\n                            </div>\r\n                            <AddUser onClose={e => handleCloseAddUser(e)} showAddUser={showAddUser} user={selectedUser} />\r\n                    </Paper>\r\n                </Grid>\r\n        </Grid>\r\n        \r\n        );\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport { useDispatch } from 'react-redux';\r\nimport { DeleteBooster } from '../../../actions/userActions.js';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function BoostersTab(props) {\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n    const { boosters } = props;\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [selectedBooster, setSelectedBooster] = useState('');\r\n\r\n    const showDeleteConfirmation = (boosterId) => {\r\n      setSelectedBooster(boosterId);\r\n      setShowConfirmation(true);\r\n    }\r\n\r\n    const deleteBooster = () => {\r\n      dispatch(DeleteBooster(selectedBooster)).then(() => {\r\n        props.reloadData();\r\n        setShowConfirmation(false);\r\n      })\r\n    }\r\n \r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className=\"custom-thead\">\r\n            <TableRow>\r\n              <TableCell>Name</TableCell>\r\n              <TableCell>Rank</TableCell>\r\n              <TableCell>Paypal</TableCell>\r\n              <TableCell>Percentage</TableCell>\r\n              <TableCell align=\"right\">Actions</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {boosters.map((row) => (\r\n              <TableRow key={row._id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {row.name}\r\n                </TableCell>\r\n                <TableCell>{row.rank}</TableCell>\r\n                <TableCell>{row.paypal}</TableCell>\r\n                <TableCell>{row.percentage}&nbsp;%</TableCell>\r\n                <TableCell align=\"right\" className='admin-actions'>\r\n                  <EditIcon onClick={() => props.onEdit(row._id)} />\r\n                  <DeleteForeverIcon onClick={() => showDeleteConfirmation(row._id)} />\r\n                  </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <ConfirmModal\r\n                show={showConfirmation} \r\n                qst=\"Are you sure to delete booster ?\"\r\n                title=\"Delete Booster\"\r\n                onConfirm={deleteBooster} \r\n                onClose={() => {setShowConfirmation(false)}}>\r\n            </ConfirmModal>\r\n      </TableContainer>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'moment';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function WaitingOrders(props) {\r\n    const classes = useStyles();\r\n    const { orders, clients } = props;\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className=\"custom-thead\">\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>Price</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order._id}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {Moment(order.createdAt).format('DD/MM/YY')}\r\n                </TableCell>\r\n                <TableCell>{clients.find(user => user._id === order.userId)?.name}</TableCell>\r\n                <TableCell>{order.price.toFixed(2)}&nbsp;$</TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'moment';\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ChangeStatus } from '../../../actions/orderActions.js';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function FinishedOrders(props) {\r\n    Moment.locale('en');\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const { orders, users } = props;\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [selectedOrder, setSelectedOrder] = useState('');\r\n\r\n    const showChangeStatusConfirmation = (e, orderId) => {\r\n      e.preventDefault();\r\n      setSelectedOrder(orderId);\r\n      setShowConfirmation(true);\r\n    }\r\n    \r\n    const handleChangeStatus = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'Paied', null)).then(() => {\r\n          props.reloadData();\r\n          setShowConfirmation(false);\r\n        })\r\n      }\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className=\"custom-thead\">\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>Boost</TableCell>\r\n              <TableCell>Queue</TableCell>\r\n              \r\n              <TableCell>Price</TableCell>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>Booster</TableCell>\r\n              <TableCell>Booster price</TableCell>\r\n              <TableCell>Booster paypal</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order._id}>\r\n                <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                <TableCell>{order.boostType}</TableCell>\r\n                <TableCell>{order.duoGame ? 'Duo Boost' : 'Solo Boost'}</TableCell>\r\n                <TableCell>{order.price}&nbsp;$</TableCell>\r\n                <TableCell>{users.find(c => c._id === order.userId)?.name}</TableCell>\r\n                <TableCell>{users.find(b => b._id === order.boosterId)?.name}</TableCell>\r\n                <TableCell>{((order.price / 100) * users.find(b => b._id === order.boosterId)?.percentage).toFixed(2)}&nbsp;$</TableCell>\r\n                <TableCell>{users.find(b => b._id === order.boosterId)?.paypal}</TableCell>\r\n                <TableCell><button className=\"paid-button\" onClick={e => showChangeStatusConfirmation(e, order._id) }>Paid</button></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n        <ConfirmModal\r\n                show={showConfirmation} \r\n                qst=\"Are you sure to paid this order ?\"\r\n                title=\"Paid order\"\r\n                onConfirm={e => handleChangeStatus(e)} \r\n                onClose={() => {setShowConfirmation(false)}}>\r\n        </ConfirmModal>\r\n      </TableContainer>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { TextField } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport { AddBooster } from '../../../actions/userActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport MessageBox from '../MessageBox.js';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nexport default function BoosterAddModal(props) {\r\n    const dispatch = useDispatch();\r\n    const boosterAdd = useSelector((state) => state.boosterAdd);\r\n    const { loading, error, feedback } = boosterAdd;\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [rank, setRank] = useState('Challenger I');\r\n    const [paypal, setPaypal] = useState('');\r\n    const [percentage, setPercentage] = useState(0)\r\n    const [myfeedback, setMyfeedback] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n\r\n\r\n    const submitSave = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!password || password === '' || password.length < 8 ) {\r\n            setErrors('Password lenght less than 8 !');\r\n            return;\r\n        }\r\n\r\n        if(password !== confirmPassword) {\r\n            setErrors('Confirm Password Error !');\r\n            return;\r\n        }\r\n\r\n        dispatch(AddBooster(name, email, password, rank, paypal, percentage)).then(() => {\r\n                setMyfeedback(feedback);\r\n                setName('');\r\n                setEmail('');\r\n                setPassword('');\r\n                setConfirmPassword('');\r\n                setRank('Challenger I');\r\n                setPaypal('');\r\n                setPercentage('');\r\n                // props.onClose(e);\r\n        }).catch((err) => {\r\n            setErrors(err);\r\n        });\r\n    }\r\n\r\n    if (props.showAddBooster) {\r\n        return (\r\n            <div className=\"modal-container show\">\r\n                <div className=\"modal-box\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2>Add Booster</h2>\r\n                            <button id=\"close-modal\" onClick={props.onClose} >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-form\">\r\n                            <form  className=\"booster-add-form\" noValidate autoComplete=\"off\">\r\n                                <div className=\"booster-group\">\r\n                                    <TextField required onChange={e => setName(e.target.value)} value={name} className=\"booster-input middle\" type=\"text\" label=\"Name\" variant=\"outlined\"  />\r\n                                    <TextField required onChange={e => setPassword(e.target.value)} value={password} className=\"booster-input middle\" type=\"password\" label=\"Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <div className=\"booster-group\">\r\n                                    <TextField required onChange={e => setEmail(e.target.value)} value={email} className=\"booster-input middle\" type=\"email\" label=\"Email\" variant=\"outlined\"   />\r\n                                    <TextField required onChange={e => setConfirmPassword(e.target.value)} value={confirmPassword} className=\"booster-input middle\" type=\"password\" label=\"Confirm Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <FormControl className=\"booster-form-controle\">\r\n                                    <InputLabel htmlFor=\"rank-select\">Rank</InputLabel>\r\n                                    <Select\r\n                                    native\r\n                                    value={rank}\r\n                                    onChange={e => setRank(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'rank',\r\n                                        id: 'rank-select',\r\n                                    }}\r\n                                    >\r\n                                    <option value={'Challenger I'}>Challenger I</option>\r\n                                    <option value={'Master I'}>Master I</option>\r\n                                    <option value={'Diamond I'}>Diamond I</option>\r\n                                    <option value={'Diamond II'}>Diamond II</option>\r\n                                    <option value={'Diamond III'}>Diamond III</option>\r\n                                    <option value={'Diamond IV'}>Diamond IV</option>\r\n                                    <option value={'Diamond V'}>Diamond V</option>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField onChange={e => setPaypal(e.target.value)} value={paypal} className=\"booster-input\" type=\"email\" label=\"Paypal Email\" variant=\"outlined\"  />\r\n                                <TextField onChange={e => setPercentage(e.target.value)} value={percentage} className=\"booster-input\" type=\"number\" label=\"Percentage\" variant=\"outlined\"  />\r\n                                <div className=\"form-center\">\r\n                                    <Button variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className=\"mybtn\"\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={e => submitSave(e)}>\r\n                                                Save&nbsp;&nbsp;\r\n                                                {\r\n                                                loading ? (\r\n                                                        <img src=\"/images/loading-buffering.gif\" width='20' alt=\"Loading\" />\r\n                                                ) : ( '' )\r\n                                                }\r\n                                        </Button>\r\n                                        {\r\n                                            error ? (\r\n                                                <MessageBox variant='danger'>{error}</MessageBox>\r\n                                            ) : feedback ? (\r\n                                                <MessageBox>{feedback}</MessageBox>\r\n                                            ) : myfeedback ? (\r\n                                                <MessageBox>{myfeedback}</MessageBox>\r\n                                            ) : errors ? (\r\n                                                <MessageBox variant='danger'>{errors}</MessageBox>\r\n                                            ) : ( '' )\r\n                                        }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { return null }\r\n}\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { makeStyles, Slider, Switch, TextField, withStyles } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MessageBox from '../MessageBox.js';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport VideocamIcon from '@material-ui/icons/Videocam';\r\nimport SpeakerNotesOffIcon from '@material-ui/icons/SpeakerNotesOff';\r\nimport { AddOrder } from '../../../actions/orderActions';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n      height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nconst OrangeSwitch = withStyles({\r\n    switchBase: {\r\n      color: '#ff9155',\r\n      '&$checked': {\r\n        color: '#ff9155',\r\n      },\r\n      '&$checked + $track': {\r\n        backgroundColor: '#ff9155',\r\n      },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n  })(Switch);\r\n\r\n  const PrettoSlider = withStyles({\r\n    root: {\r\n      color: '#ff9155',\r\n      height: 8,\r\n    },\r\n    thumb: {\r\n      height: 24,\r\n      width: 24,\r\n      backgroundColor: '#fff',\r\n      border: '2px solid currentColor',\r\n      marginTop: -8,\r\n      marginLeft: -12,\r\n      '&:focus, &:hover, &$active': {\r\n        boxShadow: 'inherit',\r\n      },\r\n    },\r\n    active: {},\r\n    valueLabel: {\r\n      left: 'calc(-50% + 4px)',\r\n    },\r\n    track: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n    rail: {\r\n      height: 8,\r\n      borderRadius: 4,\r\n    },\r\n  })(Slider);\r\n\r\nexport default function OrderAddModal(props) {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const orderAdd = useSelector((state) => state.orderAdd);\r\n    const { loading } = orderAdd;\r\n\r\n    const [user, setUser] = useState('');\r\n    const [duoGame, setDuoGame] = useState(false);\r\n    const [account, setAccount] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [summoner, setSummoner] = useState('');\r\n    const [boostType, setBoostType] = useState('Rank Boosting')\r\n    const [startRank, setStartRank] = useState(0);\r\n    const [startDivision, setStartDivision] = useState(0);\r\n    const [rankRating, setRankRating] = useState(0);\r\n    const [server, setServer] = useState('');\r\n    const [desiredRank, setDesiredRank] = useState(0);\r\n    const [desiredDivision, setDesiredDivision] = useState(0);\r\n    const [games, setGames] = useState(5);\r\n    const [wins, setWins] = useState(5);\r\n    const [price, setPrice] = useState(0);\r\n    const [chatOffline, setChatOffline] = useState(false);\r\n    const [specificAgents, setSpecificAgents] = useState(false);\r\n    const [priorityOrder, setPriorityOrder] = useState(false);\r\n    const [withStreaming, setWithStreaming] = useState(false);\r\n    const [myfeedback, setMyfeedback] = useState(null);\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    const ranks = [\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\"\r\n    ];\r\n\r\n\r\n    const handleUser = (e) => {\r\n        e.preventDefault();\r\n        setUser(e.target.value);\r\n    }\r\n\r\n    const handleGames = (e, newValue) => {\r\n        setGames(newValue)\r\n    }\r\n\r\n    const handleWins = (e, newValue) => {\r\n        setWins(newValue)\r\n    }\r\n\r\n    const handleBoostType = (e, type) => {\r\n        e.preventDefault();\r\n        setBoostType(type)\r\n        if (type === 'Placement Boost' || type === 'Competitive Wins') {\r\n            setStartRank(0);\r\n            setStartDivision(0);\r\n            setRankRating(0);\r\n        }\r\n    }\r\n\r\n    const handleStartRank = (e) => {\r\n        e.preventDefault();\r\n        if (desiredRank === 0) {\r\n            setStartRank(parseInt(e.target.value));\r\n        } else {\r\n            if (parseInt(e.target.value) <= desiredRank) {\r\n                setStartRank(parseInt(e.target.value));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleDesiredRank = (e) => {\r\n        e.preventDefault();\r\n        if (boostType === 'Placement Boosting' || boostType === 'Competitive Wins') {\r\n            setDesiredRank(parseInt(e.target.value));\r\n        } else {\r\n            if (boostType === 'Rank Boosting' && parseInt(e.target.value) >= startRank) {\r\n                setDesiredRank(parseInt(e.target.value));\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleStartDivision = (e) => {\r\n        e.preventDefault();\r\n        if (startRank === desiredRank) {\r\n            if (desiredDivision > 0 && parseInt(e.target.value) < desiredDivision) {\r\n                setStartDivision(parseInt(e.target.value));\r\n            }\r\n        } else {\r\n            setStartDivision(parseInt(e.target.value));\r\n        }\r\n    }\r\n\r\n    const handleDesiredDivision = (e) => {\r\n        e.preventDefault();\r\n        if (boostType === 'Rank Boosting' && startRank === desiredRank) {\r\n            if (parseInt(e.target.value) > startDivision) {\r\n                setDesiredDivision(parseInt(e.target.value));\r\n            }\r\n        } else {\r\n            setDesiredDivision(parseInt(e.target.value));\r\n        }\r\n    }\r\n\r\n    const calculatePrice = useCallback(() => {\r\n        const rankBoostingPrices = props.setting?.filter(s => s.games === 0 && s.win === 0);\r\n        const placementBoostingPrices = props.setting?.filter(s => s.games === 1);\r\n        const winBoostingPrices = props.setting?.filter(s => s.win === 1);\r\n        let GeneratedPrice = 0;\r\n\r\n        if (boostType === 'Rank Boosting') {\r\n            if (rankBoostingPrices) {\r\n                if (startRank === desiredRank) {\r\n                    for(let j = startDivision; j < desiredDivision; j++) {\r\n                        GeneratedPrice += rankBoostingPrices.find(p => p.rank === startRank && p.division === j && p.desiredRank === desiredRank && p.desiredDivision === j+1)?.amount\r\n                    }\r\n                } else {\r\n                    for (let i = startRank; i <= desiredRank; i++) {\r\n                        if (i === startRank) {\r\n                            for (let j = startDivision; j <= 3; j++) {\r\n                                if (j === 3) {\r\n                                    GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                                } else {\r\n                                    GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === j && p.desiredRank === i && p.desiredDivision === j+1)?.amount\r\n                                }\r\n                            }\r\n                        } else if (i === desiredRank) {\r\n                            if (desiredDivision === 2) {\r\n                                GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 1 && p.desiredRank === i && p.desiredDivision === 2)?.amount\r\n                            }\r\n                            if (desiredDivision === 3) {\r\n                                GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 2 && p.desiredRank === i && p.desiredDivision === 3)?.amount\r\n                                GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                            }\r\n                        } else {\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 1 && p.desiredRank === i && p.desiredDivision === 2)?.amount\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 2 && p.desiredRank === i && p.desiredDivision === 3)?.amount\r\n                            GeneratedPrice += rankBoostingPrices.find(p => p.rank === i && p.division === 3 && p.desiredRank === i+1 && p.desiredDivision === 1)?.amount\r\n                        }  \r\n                    }\r\n                }\r\n            }\r\n        } else if (boostType === 'Placement Boosting'){\r\n            if (!desiredRank) {\r\n                GeneratedPrice = placementBoostingPrices.find(p => p.desiredRank === 0)?.amount  * games\r\n            } else {\r\n                GeneratedPrice = placementBoostingPrices.find(p => p.desiredRank === desiredRank)?.amount  * games\r\n            }\r\n        } else {\r\n            GeneratedPrice = winBoostingPrices[desiredRank]?.amount * wins\r\n        }\r\n\r\n        let optionPrice = GeneratedPrice;\r\n    \r\n        if (duoGame) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 40);\r\n        }\r\n        if (priorityOrder) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n        if (withStreaming) {\r\n            optionPrice += ((GeneratedPrice / 100)  * 20);\r\n        }\r\n        if (optionPrice > 0) {\r\n            GeneratedPrice = optionPrice;\r\n        }\r\n        \r\n        return GeneratedPrice.toFixed(2);\r\n        \r\n    }, [props.setting, boostType, duoGame, priorityOrder, withStreaming, startRank, desiredRank, startDivision, desiredDivision, games, wins]);\r\n\r\n\r\n    const submitSave = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (user === '') {\r\n            setErrors('Select user !');\r\n            return;\r\n        }\r\n        if (boostType === 'Rank Boosting' && startRank === '') {\r\n            setErrors('Select your start rank !');\r\n            return;\r\n        }\r\n        if (boostType === 'Rank Boosting' && startDivision === 0) {\r\n            setErrors('Select your start division !');\r\n            return;\r\n        }\r\n        if (desiredRank === 0) {\r\n            setErrors('Select your desired rank !');\r\n            return;\r\n        }\r\n        if (desiredDivision === 0) {\r\n            setErrors('Select your desired division !');\r\n            return;\r\n        }\r\n        if (server === '') {\r\n            setErrors('Select your server !');\r\n            return;\r\n        }\r\n        if (price === 0) {\r\n            setErrors('Enter price !');\r\n            return;\r\n        }\r\n\r\n        dispatch(AddOrder(\r\n            user, \r\n            account, \r\n            password, \r\n            summoner, \r\n            server, \r\n            boostType, \r\n            startRank, \r\n            startDivision, \r\n            rankRating, \r\n            desiredRank, \r\n            desiredDivision, \r\n            games,\r\n            wins,\r\n            duoGame, \r\n            chatOffline, \r\n            specificAgents, \r\n            priorityOrder, \r\n            withStreaming, \r\n            price,\r\n            )).then(() => {\r\n                setMyfeedback('New Order added');\r\n                setDuoGame(false);\r\n                setAccount('');\r\n                setPassword('');\r\n                setSummoner('');\r\n                setBoostType('Rank Boosting');\r\n                setStartRank('');\r\n                setStartDivision(0);\r\n                setRankRating(0);\r\n                setDesiredRank('');\r\n                setDesiredDivision(0);\r\n                setServer('');\r\n                setGames(5);\r\n                setWins(5);\r\n                setChatOffline(false);\r\n                setSpecificAgents(false);\r\n                setPriorityOrder(false);\r\n                setWithStreaming(false);\r\n                setPrice(0);\r\n                setUser('');\r\n                props.onClose(e);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (user) {\r\n            setAccount(props.accounts.find(acc => acc.userId === user)?.name || '');\r\n            setPassword(props.accounts.find(acc => acc.userId === user)?.password || '');\r\n            setSummoner(props.accounts.find(acc => acc.userId === user)?.summoner || '');\r\n        }\r\n        if (boostType === 'Rank Boosting' && startRank > 0 && desiredRank > 0 && startDivision > 0 && desiredDivision > 0) {\r\n            setPrice(calculatePrice);\r\n        }\r\n\r\n        if (boostType === 'Placement Boosting' && desiredRank > 0 ) {\r\n            setPrice(calculatePrice);\r\n        }\r\n\r\n        if (boostType === 'Competitive Wins' && desiredRank > 0 ) {\r\n            setPrice(calculatePrice);\r\n        }\r\n    }, [boostType, calculatePrice, desiredDivision, desiredRank, props.accounts, rankRating, startDivision, startRank, user])\r\n\r\n\r\n    if (props.showAddOrder) {\r\n        return (\r\n            <div className=\"modal-container show\">\r\n                <div className=\"modal-box\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2>Add Order</h2>\r\n                            <button id=\"close-modal\" onClick={props.onClose} >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-form\">\r\n                            <form  className=\"booster-add-form\" noValidate autoComplete=\"off\">\r\n                                <div className=\"modal-form-single\" title-data='User infos'>\r\n                                    <FormControl className=\"booster-form-controle\">\r\n                                        <Select\r\n                                        native\r\n                                        value={user}\r\n                                        onChange={e => handleUser(e)}\r\n                                        inputProps={{\r\n                                            name: 'client',\r\n                                            id: 'client-select',\r\n                                        }}\r\n                                        >\r\n                                        <option value={''}>Select user</option>\r\n                                        {\r\n                                            props.clients.map(client => \r\n                                                <option key={client._id} value={client._id}>{client.name} &nbsp; | &nbsp; {client.email}</option>\r\n                                            )\r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </div>\r\n                                <div className=\"modal-form-group\" title-data='Valorant account infos'>\r\n                                    <div className=\"switch-container\">\r\n                                        <OrangeSwitch className=\"group4-input\"\r\n                                            onChange={e => setDuoGame(!duoGame)}\r\n                                            name=\"chat-offline\"\r\n                                        />\r\n                                        <label className=\"switch-label\"><PersonAddIcon /> Duo boost</label>\r\n                                    </div>\r\n                                    <TextField disabled={duoGame ? true : false} onChange={e => setAccount(e.target.value)} value={account} className=\"group4-input\" type=\"text\" label=\"Valorant account\" variant=\"outlined\"  />\r\n                                    <TextField disabled={duoGame ? true : false}  onChange={e => setPassword(e.target.value)} value={password} className=\"group4-input\" type=\"text\" label=\"Account password\" variant=\"outlined\"  />\r\n                                    <TextField disabled={duoGame ? true : false}  onChange={e => setSummoner(e.target.value)} value={summoner} className=\"group4-input\" type=\"text\" label=\"Summoner name\" variant=\"outlined\"  />\r\n                                </div>\r\n                                <div className=\"modal-form-group\" title-data='Boost infos'>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                        native\r\n                                        value={startRank}\r\n                                        onChange={e => handleStartRank(e)}\r\n                                        inputProps={{\r\n                                            name: 'startrank',\r\n                                            id: 'startrank-select',\r\n                                        }}\r\n                                        disabled={boostType === 'Rank Boosting' ? false : true}\r\n                                        >\r\n                                         <option value={''}>Start rank</option>\r\n                                        {\r\n                                            ranks.map((rank, index) => \r\n                                                <option key={index} value={index + 1}>{rank}</option>\r\n                                            )\r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                            native\r\n                                            value={startDivision}\r\n                                            onChange={e => handleStartDivision(e)}\r\n                                            inputProps={{\r\n                                                name: 'startdivision',\r\n                                                id: 'startdivision-select',\r\n                                            }}\r\n                                            disabled={boostType === 'Rank Boosting' ? false : true}\r\n                                        >\r\n                                         <option value={0}>Start Division</option>\r\n                                         <option value={1}>I</option>\r\n                                         <option value={2}>II</option>\r\n                                         <option value={3}>III</option>\r\n                                        I\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                            native\r\n                                            value={rankRating}\r\n                                            onChange={e => setRankRating(e.target.value)}\r\n                                            inputProps={{\r\n                                                name: 'rankRating',\r\n                                                id: 'rankRating-select',\r\n                                            }}\r\n                                            disabled={boostType === 'Rank Boosting' ? false : true}\r\n                                        >\r\n                                            <option value={0}>Rating amount</option>\r\n                                            <option value={10}>00 - 20</option>\r\n                                            <option value={30}>21 - 40</option>\r\n                                            <option value={50}>41 - 60</option>\r\n                                            <option value={60}>61 - 80</option>\r\n                                            <option value={90}>81 - 100</option>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                            native\r\n                                            value={server}\r\n                                            onChange={e => setServer(e.target.value)}\r\n                                            inputProps={{\r\n                                                name: 'server',\r\n                                                id: 'server-select',\r\n                                            }}\r\n                                        >\r\n                                            <option value={''}>Select Server</option>\r\n                                            <option value={'EUW'}>EUW</option>\r\n                                            <option value={'EUNE'}>EUNE</option>\r\n                                            <option value={'NA'}>NA</option>\r\n                                            <option value={'OCE'}>OCE</option>\r\n                                            <option value={'TR'}>TR</option>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                        native\r\n                                        value={desiredRank}\r\n                                        onChange={e => handleDesiredRank(e)}\r\n                                        inputProps={{\r\n                                            name: 'desiredrank',\r\n                                            id: 'desiredrank-select',\r\n                                        }}\r\n                                        >\r\n                                        {\r\n                                            boostType === 'Placement Boosting' ? (\r\n                                            <option value={0}>Unranked</option>\r\n                                            ) : (\r\n                                                <option value={0}>Desired rank</option>\r\n                                            )\r\n                                        }\r\n                                        {\r\n                                            ranks.map((rank, index) => \r\n                                                <option key={index} value={index + 1}>{rank}</option>\r\n                                            )\r\n                                        }\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    <FormControl className=\"group4-input\">\r\n                                        <Select\r\n                                            native\r\n                                            value={desiredDivision}\r\n                                            onChange={e => handleDesiredDivision(e)}\r\n                                            inputProps={{\r\n                                                name: 'desireddivision',\r\n                                                id: 'desireddivision-select',\r\n                                            }}\r\n                                        >\r\n                                         <option value={0}>Desired Division</option>\r\n                                         <option value={1}>I</option>\r\n                                         <option value={2}>II</option>\r\n                                         <option value={3}>III</option>\r\n                                        I\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                    {\r\n                                        boostType === 'Competitive Wins' ? (\r\n                                            <div className=\"games-slider-input\">\r\n                                                <div className={classes.margin} />\r\n                                                <Typography gutterBottom>Wins</Typography>\r\n                                                <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" \r\n                                                step={1}\r\n                                                min={1}\r\n                                                max={10} \r\n                                                value={wins} \r\n                                                onChange={handleWins} \r\n                                                />\r\n                                                <div className={classes.margin} />\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"games-slider-input\">\r\n                                                <div className={classes.margin} />\r\n                                                <Typography gutterBottom>Games</Typography>\r\n                                                <PrettoSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider\" \r\n                                                step={1}\r\n                                                min={1}\r\n                                                max={5} \r\n                                                value={games} \r\n                                                onChange={handleGames} \r\n                                                disabled={boostType === 'Placement Boosting' ? false : true}\r\n                                                />\r\n                                                <div className={classes.margin} />\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    \r\n\r\n                                    <TextField onChange={e => setPrice(e.target.value)} \r\n                                        value={price} \r\n                                        className=\"group4-input\" type=\"text\" label=\"Price\" variant=\"outlined\"  />\r\n\r\n                                    <div className=\"switch-container\">\r\n                                        <OrangeSwitch\r\n                                            onChange={e => setChatOffline(!chatOffline)}\r\n                                            name=\"chat-offline\"\r\n                                            disabled={duoGame ? true : false}\r\n                                        />\r\n                                        <label className=\"switch-label\"><SpeakerNotesOffIcon /> Offline on chat</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"switch-container group4-input\">\r\n                                        <OrangeSwitch\r\n                                            onChange={e => setSpecificAgents(!specificAgents)}\r\n                                            name=\"specific-agents\"\r\n                                            disabled={duoGame ? true : false}\r\n                                        />\r\n                                        <label className=\"switch-label\"><PeopleIcon /> Specific agents</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"switch-container group4-input\">\r\n                                        <OrangeSwitch\r\n                                            onChange={e => setPriorityOrder(!priorityOrder)}\r\n                                            name=\"priority-order\"\r\n                                        />\r\n                                        <label className=\"switch-label\"><FlashOnIcon /> Priority order</label>\r\n                                    </div>\r\n\r\n                                    <div className=\"switch-container group4-input\">\r\n                                        <OrangeSwitch\r\n                                            onChange={e => setWithStreaming(!withStreaming)}\r\n                                            name=\"with-streaming\"\r\n                                            disabled={duoGame ? true : false}\r\n                                        />\r\n                                        <label className=\"switch-label\"><VideocamIcon /> With Streaming</label>\r\n                                    </div>\r\n                                    <div className=\"order-type\">\r\n                                        <button className={boostType === 'Rank Boosting' ? 'active' : ''} onClick={e => handleBoostType(e, 'Rank Boosting')}>Rank Boost</button>\r\n                                        <button className={boostType === 'Placement Boosting' ? 'active' : ''} onClick={e => handleBoostType(e, 'Placement Boosting')}>Placement Boosting</button>\r\n                                        <button className={boostType === 'Competitive Wins' ? 'active' : ''} onClick={e => handleBoostType(e, 'Competitive Wins')}>Competitive Wins</button>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"form-center\">\r\n                                    <Button variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className=\"mybtn\"\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={e => submitSave(e)}>\r\n                                                Save&nbsp;&nbsp;\r\n                                                {\r\n                                                loading ? (\r\n                                                        <img src=\"/images/loading-buffering.gif\" width='20' alt=\"Loading\" />\r\n                                                ) : ( '' )\r\n                                                }\r\n                                        </Button>\r\n                                        {\r\n                                            myfeedback ? (\r\n                                                <MessageBox>{myfeedback}</MessageBox>\r\n                                            ) : errors ? (\r\n                                                <MessageBox variant='danger'>{errors}</MessageBox>\r\n                                            ) : ( '' )\r\n                                        }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { return null }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport { TextField } from '@material-ui/core';\r\nimport Select from '@material-ui/core/Select';\r\nimport { EditBooster } from '../../../actions/userActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport MessageBox from '../MessageBox.js';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\n\r\nexport default function BoosterEditModal(props) {\r\n    const { booster } = props;\r\n    const boosterEdit = useSelector((state) => state.boosterEdit);\r\n    const { loading, feedback } = boosterEdit;\r\n    const dispatch = useDispatch()\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [rank, setRank] = useState('');\r\n    const [paypal, setPaypal] = useState('');\r\n    const [percentage, setPercentage] = useState('')\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    const submitSave = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (password !== '' && password.length < 8 ) {\r\n            setErrors('Password lenght less than 8 !');\r\n            return;\r\n        }\r\n\r\n        if(password !== confirmPassword) {\r\n            setErrors('Confirm Password Error !');\r\n            return;\r\n        }\r\n\r\n        dispatch(EditBooster(booster._id, email, name, password, rank, paypal, percentage));\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (props.showEditBooster) {\r\n            setEmail(booster.email);\r\n            setName(booster.name);\r\n            setRank(booster.rank);\r\n            setPaypal(booster.paypal);\r\n            setPercentage(booster.percentage);\r\n        }\r\n    }, [props.showEditBooster, booster]);\r\n\r\n    if (props.showEditBooster) {\r\n        \r\n        return (\r\n            <div className=\"modal-container show\">\r\n                <div className=\"modal-box\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h2>Edit Booster</h2>\r\n                            <button id=\"close-modal\" onClick={props.onClose} >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                        <div className=\"modal-form\">\r\n                            <form  className=\"booster-add-form\" noValidate autoComplete=\"off\">\r\n                                <div className=\"booster-group\">\r\n                                    <TextField onChange={e => setName(e.target.value)} value={name} className=\"booster-input middle\" type=\"text\" label=\"Name\" variant=\"outlined\" autoComplete=\"off\" />\r\n                                    <TextField onChange={e => setPassword(e.target.value)} value={password} className=\"booster-input middle\" type=\"password\" label=\"New Password\" variant=\"outlined\" autoComplete=\"off\" />\r\n                                </div>\r\n                                <div className=\"booster-group\">\r\n                                    <TextField onChange={e => setEmail(e.target.value)} value={email} className=\"booster-input middle\" type=\"email\" label=\"Email\" variant=\"outlined\"   />\r\n                                    <TextField onChange={e => setConfirmPassword(e.target.value)} value={confirmPassword} className=\"booster-input middle\" type=\"password\" label=\"Confirm New Password\" variant=\"outlined\" />\r\n                                </div>\r\n                                <FormControl className=\"booster-form-controle\">\r\n                                    <InputLabel htmlFor=\"rank-select\">Rank</InputLabel>\r\n                                    <Select\r\n                                    native\r\n                                    value={rank}\r\n                                    onChange={e => setRank(e.target.value)}\r\n                                    inputProps={{\r\n                                        name: 'rank',\r\n                                        id: 'rank-select',\r\n                                    }}\r\n                                    >\r\n                                    <option value={'Challenger I'}>Challenger I</option>\r\n                                    <option value={'Master I'}>Master I</option>\r\n                                    <option value={'Diamond I'}>Diamond I</option>\r\n                                    <option value={'Diamond II'}>Diamond II</option>\r\n                                    <option value={'Diamond III'}>Diamond III</option>\r\n                                    <option value={'Diamond IV'}>Diamond IV</option>\r\n                                    <option value={'Diamond V'}>Diamond V</option>\r\n\r\n                                    </Select>\r\n                                </FormControl>\r\n                                <TextField onChange={e => setPaypal(e.target.value)} value={paypal} className=\"booster-input\" type=\"email\" label=\"Paypal Email\" variant=\"outlined\"  />\r\n                                <TextField onChange={e => setPercentage(e.target.value)} value={percentage} className=\"booster-input\" type=\"number\" label=\"Percentage\" variant=\"outlined\"  />\r\n                                <div className=\"form-center\">\r\n                                    <Button variant=\"contained\"\r\n                                                color=\"primary\"\r\n                                                className=\"mybtn\"\r\n                                                startIcon={<SaveIcon />}\r\n                                                onClick={submitSave}>\r\n                                                Save&nbsp;&nbsp;\r\n                                                {\r\n                                                loading ? (\r\n                                                    <img src=\"/images/loading-buffering.gif\" width='20px' alt=\"Loading\" />\r\n                                                ) : ( '' )\r\n                                                }\r\n                                        </Button>\r\n                                        {\r\n                                            feedback ? (\r\n                                                <MessageBox>{feedback}</MessageBox>\r\n                                            ) : errors ? (\r\n                                                <MessageBox variant='danger'>{errors}</MessageBox>\r\n                                            ) : ( '' )\r\n                                        }\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else { return null }\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function ProgressOrders(props) {\r\n    const classes = useStyles();\r\n    const { orders, clients, boosters } = props;\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className=\"custom-thead\">\r\n            <TableRow>\r\n              <TableCell>Id</TableCell>\r\n              <TableCell>Customer</TableCell>\r\n              <TableCell>Booster</TableCell>\r\n              <TableCell>Price</TableCell>\r\n              <TableCell>Status</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order._id} \r\n                className={props.selectedOrder === order._id ? 'mytablerow active' : 'mytablerow'} \r\n                onClick={() => props.selectOrder(order._id)}>\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {\r\n                    order.isPaused ? (\r\n                      <span className=\"paused\">Paused</span>\r\n                    ) : (\r\n                      <span>{order._id.substring(order._id.length - 5)}</span>\r\n                    )\r\n                  }\r\n                  \r\n                </TableCell>\r\n                <TableCell>{clients.find(user => user._id === order.userId)?.name}</TableCell>\r\n                <TableCell>{boosters.find(b => b._id === order.boosterId)?.name}</TableCell>\r\n                <TableCell>{((order.price / 100) * boosters.find(b => b._id === order.boosterId)?.percentage).toFixed(2)}&nbsp;$</TableCell>\r\n                <TableCell><span className=\"status-output progress\">{order.status}</span></TableCell>\r\n                <TableCell><button className=\"paid-button red\" onClick={() => props.onDrop(order._id) }>Drop</button></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport BoosterTab from './BoostersTab.js'\r\nimport WaitingOrders from './WaitingOrders.js'\r\nimport FinishedOrders from './FinishedOrders.js'\r\nimport BoosterAddModal from './BoosterAddModal.js';\r\nimport OrderAddModal from './OrderAddModal.js';\r\nimport BoosterEditModal from './BoosterEditModal.js';\r\nimport { ListUsers } from '../../../actions/userActions';\r\nimport { ChangeStatus, ListOrders } from '../../../actions/orderActions';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport ProgressOrders from './ProgressOrders.js'\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport ChatModule from '../ChatModule.js'\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { ListAccount } from '../../../actions/accountActions.js';\r\n\r\nexport default function AdminHome(props) {\r\n    let boosters, clients, waitingOrders, progressOrders, finishedOrders;\r\n    const dispatch = useDispatch();\r\n    const { classes, setting } = props;\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n    const accountList = useSelector( state => state.accountList);\r\n    const { accounts } = accountList;\r\n    const [selectedBooster, setSelectedBooster] = useState(null);\r\n    const [selectedOrder, setSelectedOrder] = useState({});\r\n    const [showAddBooster, setShowAddBooster] = useState(false);\r\n    const [showEditBooster, setShowEditBooster] = useState(false);\r\n    const [showAddOrder, setShowAddOrder] = useState(false);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [reloadChat, setReloadChat] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n        dispatch(ListAccount());\r\n    }, [dispatch]);\r\n\r\n    // BOOSTERS MODALS\r\n\r\n    // Add Booster Modal -/Close\r\n\r\n    const handleCloseAddBooster = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ListUsers());\r\n        setShowAddBooster(false);\r\n    }\r\n\r\n    // Edit Booster Modal Open/Close\r\n\r\n    const handleOpenEditBooster = (boosterId) => {\r\n        const booster = boosters?.find(b => b._id === boosterId);\r\n        setSelectedBooster(booster);\r\n        setShowEditBooster(true);\r\n    }\r\n\r\n    const handleCloseEditBooster = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ListUsers());\r\n        setShowEditBooster(false);\r\n    }\r\n\r\n    // ORDERS MODALS\r\n\r\n    // Add Booster Modal -/Close\r\n\r\n    const handleCloseAddOrder = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ListOrders());\r\n        setShowAddOrder(false);\r\n    }\r\n\r\n    const handleConfirmDropOrder = (orderId) => {\r\n        setSelectedOrder(orderId);\r\n        setShowConfirmation(true);\r\n      }\r\n\r\n    const handleChangeStatus = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'Looking for a booster', '')).then(() => {\r\n          LoadData();\r\n          setShowConfirmation(false);\r\n        })\r\n      }\r\n\r\n    // Reload Data\r\n\r\n    const LoadData = () => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n        dispatch(ListAccount());\r\n        setSelectedOrder(null)\r\n    }\r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        boosters = users?.filter(user => user.rule === 'booster');\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        waitingOrders = orders?.filter(order => order.status === 'Looking for a booster');\r\n        finishedOrders = orders?.filter(order => order.status === 'Finished');\r\n        progressOrders = orders?.filter(order => order.status === 'In progress');\r\n\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {/* Finished Orders */}\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Finished orders</div>\r\n                        </div>\r\n                        <div className=\"paper-content\">\r\n                            <FinishedOrders \r\n                                orders={finishedOrders} \r\n                                users={users} \r\n                                reloadData={() => LoadData()} />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* In Progress */}\r\n                <Grid item xs={12} md={8}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">In Progress orders</div>\r\n                        </div>\r\n                        <div className=\"paper-content\">\r\n                            <ProgressOrders \r\n                                selectOrder={orderId => setSelectedOrder(orderId)} \r\n                                onDrop={orderId => handleConfirmDropOrder(orderId)} \r\n                                orders={progressOrders} boosters={boosters} clients={clients}\r\n                                reloadData={() => LoadData()} \r\n                                selectedOrder={selectedOrder}\r\n                                />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Chat */}\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Chat</div>\r\n                            <div className=\"reload-chat\"><CachedIcon onClick={e => setReloadChat(true)} /></div>\r\n                            <div className=\"button-container\">\r\n                                <select \r\n                                    value={selectedOrder ? selectedOrder : 0} \r\n                                    onChange={e => setSelectedOrder(e.target.value)}\r\n                                    className=\"orders-select\">\r\n                                    <option value={0}>Select Order</option>\r\n                                    {\r\n                                        progressOrders.map(order =>\r\n                                            <option key={order._id} value={order._id}> {order._id.substring(order._id.length - 5)} | {Moment(order.createdAt).format('DD/MM/YY')}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"paper-content chat\">\r\n                                <ChatModule order={selectedOrder} reloadChat={reloadChat} reloaded={e => setReloadChat(false)} />\r\n                            </div>\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Waiting Orders */}\r\n                <Grid item xs={12} md={5}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Waiting orders</div>\r\n                            <div className=\"button-container\">\r\n                                <button onClick={() => setShowAddOrder(true)}><AddCircleIcon /></button>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"paper-content\">\r\n                                <WaitingOrders clients={clients}\r\n                                    onEdit={boosterId => handleOpenEditBooster(boosterId)} \r\n                                    orders={waitingOrders} \r\n                                    reloadData={() => LoadData()} />\r\n                            </div>\r\n                            <OrderAddModal onClose={e => handleCloseAddOrder(e)} showAddOrder={showAddOrder} clients={clients} accounts={accounts} setting={setting} />\r\n                            <BoosterEditModal onClose={e => handleCloseEditBooster(e)} showEditBooster={showEditBooster} booster={selectedBooster} />\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Booster */}\r\n                <Grid item xs={12} md={7}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Boosters</div>\r\n                            <div className=\"button-container\">\r\n                                <button onClick={() => setShowAddBooster(true)}><AddCircleIcon /></button>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"paper-content\">\r\n                            <BoosterTab \r\n                                onEdit={boosterId => handleOpenEditBooster(boosterId)} \r\n                                boosters={boosters} reloadData={() => LoadData()} />\r\n                        </div>\r\n                        <BoosterAddModal onClose={e => handleCloseAddBooster(e)} showAddBooster={showAddBooster} />\r\n                        <BoosterEditModal onClose={e => handleCloseEditBooster(e)} showEditBooster={showEditBooster} booster={selectedBooster} />\r\n                    </Paper>\r\n                </Grid>\r\n                <ConfirmModal\r\n                    show={showConfirmation} \r\n                    qst=\"Are you sure to drop this order ?\"\r\n                    title=\"Drop order\"\r\n                    onConfirm={e => handleChangeStatus(e)} \r\n                    onClose={() => {setShowConfirmation(false)}}>\r\n                </ConfirmModal>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport Moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\nexport default function ProgressOrdersBooster(props) {\r\n    const classes = useStyles();\r\n    const { orders, clients, user } = props;\r\n\r\n    const ranks = [\r\n        \"iron\",\r\n        \"bronze\",\r\n        \"silver\",\r\n        \"gold\",\r\n        \"platinum\",\r\n        \"diamond\",\r\n        \"immortal\"\r\n    ];\r\n\r\n    const divisions = [\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ]\r\n\r\n    return (\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead className=\"custom-thead\">\r\n            <TableRow>\r\n              <TableCell>Date</TableCell>\r\n              <TableCell>User</TableCell>\r\n              <TableCell>Boost Type</TableCell>\r\n              <TableCell>Queue</TableCell>\r\n              <TableCell>Server</TableCell>\r\n              <TableCell className=\"text-center\">Boost</TableCell>\r\n              <TableCell>Your Price</TableCell>\r\n              <TableCell>Action</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {orders.map((order) => (\r\n              <TableRow key={order._id} \r\n                className={props.selectedOrder === order._id ? 'mytablerow active' : 'mytablerow'} \r\n                onClick={() => props.selectOrder(order._id)}>\r\n                <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                <TableCell>{clients.find(b => b._id === order.userId)?.name}</TableCell>\r\n                <TableCell>{order.boostType}</TableCell>\r\n                <TableCell>{order.duoGame ? 'Duo' : 'Solo'}</TableCell>\r\n                <TableCell>{order.server}</TableCell>\r\n                <TableCell>\r\n                  <span className=\"nowrap\">\r\n                    {\r\n                      order.boostType === \"Rank Boosting\" ? (\r\n                          <span className=\"flex-align-center no-m j-fs\">\r\n                              <span className=\"cap\">{ranks[order.startRank - 1]}</span>\r\n                              <span>&nbsp;{divisions[order.startDivision - 1]}</span>\r\n                          </span>\r\n                      ) : order.boostType === \"Placement Boosting\" ? (\r\n                          <span>{order.games}&nbsp;Games</span>\r\n                      ) : (\r\n                        <span>{order.wins}&nbsp;Wins</span>\r\n                      )\r\n                    }\r\n                    <ForwardIcon />\r\n                    <span className=\"flex-align-center no-m j-fs\">\r\n                        <span className=\"cap\">{ranks[order.desiredRank - 1]}</span>\r\n                        <span>&nbsp;{divisions[order.desiredDivision - 1]}</span>\r\n                    </span>\r\n                  </span>\r\n                </TableCell>\r\n                <TableCell>{((order.price / 100) * user.percentage).toFixed(2)}&nbsp;$</TableCell>\r\n                <TableCell><button className=\"paid-button blue\" onClick={() => props.onTake(order._id) }>Take</button></TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ListUsers } from '../../../actions/userActions';\r\nimport { ChangeStatus, ListOrders } from '../../../actions/orderActions';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport ProgressOrdersBooster from './ProgressOrdersBooster.js'\r\nimport ConfirmModal from '../ConfirmModal.js';\r\nimport MonetizationOnIcon from '@material-ui/icons/MonetizationOn';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\n\r\nexport default function BoosterHome(props) {\r\n    let user, clients, watingOrders, finishedOrders, paiedOrders;\r\n    const dispatch = useDispatch();\r\n    const { classes } = props;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n    const [selectedOrder, setSelectedOrder] = useState({});\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n    }, [dispatch]);\r\n\r\n    // BOOSTERS MODALS\r\n\r\n    const handleConfirmDropOrder = (orderId) => {\r\n        setSelectedOrder(orderId);\r\n        setShowConfirmation(true);\r\n      }\r\n\r\n    const handleTakeOrder = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'In progress', userInfo._id)).then(() => {\r\n          LoadData();\r\n          setShowConfirmation(false);\r\n        })\r\n      }\r\n\r\n    // Reload Data\r\n\r\n    const LoadData = () => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n        setSelectedOrder(null)\r\n    }\r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        user = users?.find(user => user._id === userInfo._id);\r\n        paiedOrders = orders?.filter(order => order.status === 'Paied' && order.boosterId === user._id);\r\n        finishedOrders = orders?.filter(order => order.status === 'Finished' && order.boosterId === user._id);\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        watingOrders = orders?.filter(order => order.status === 'Looking for a booster' && !order.isPaused);\r\n\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {/* Booster Infos */}\r\n                <Grid item xs={12}>\r\n                    <div className=\"booster-panel-infos\">\r\n                        <div className=\"booster-infos-box\">\r\n                            <div className=\"icon-container\">\r\n                                <MonetizationOnIcon />\r\n                            </div>\r\n                            <div className=\"infos-container\">\r\n                                <p><strong>Total Paied Orders : </strong><span>{\r\n                                    paiedOrders.length\r\n                                    }</span></p>\r\n                                <p><strong>Total Revenue : </strong><span>{user.totalRevenue.toFixed(2)}&nbsp;$</span></p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"booster-infos-box\">\r\n                            <div className=\"icon-container\">\r\n                                <CheckCircleIcon />\r\n                            </div>\r\n                            <div className=\"infos-container\">\r\n                                <p><strong>Total Finished Orders : </strong><span>{\r\n                                    finishedOrders.length\r\n                                    }</span></p>\r\n                                <p><strong>Payement Pending : </strong><span>{user.payementPending.toFixed(2)}&nbsp;$</span></p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Grid>\r\n                {/* In Progress */}\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">New orders</div>\r\n                        </div>\r\n                        <div className=\"paper-content\">\r\n                            <ProgressOrdersBooster\r\n                                selectOrder={orderId => setSelectedOrder(orderId)} \r\n                                onTake={orderId => handleConfirmDropOrder(orderId)} \r\n                                orders={watingOrders} clients={clients}\r\n                                user={user}\r\n                                reloadData={() => LoadData()} \r\n                                selectedOrder={selectedOrder}\r\n                            />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <ConfirmModal\r\n                    show={showConfirmation} \r\n                    qst=\"Are you sure to take this order ?\"\r\n                    title=\"Take order\"\r\n                    onConfirm={e => handleTakeOrder(e)} \r\n                    onClose={() => {setShowConfirmation(false)}}>\r\n                </ConfirmModal>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { ListUsers } from '../../../actions/userActions';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport ChatModule from '../ChatModule.js'\r\nimport { ChangeStatus, ListOrders } from '../../../actions/orderActions.js';\r\nimport ConfirmModal from '../ConfirmModal.js'\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { ListAccount } from '../../../actions/accountActions';\r\n\r\n\r\nexport default function MyOrders(props) {\r\n    let clients, progressOrders;\r\n    const dispatch = useDispatch();\r\n    const { classes } = props;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const accountList = useSelector( state => state.accountList);\r\n    const { accounts } = accountList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n    const [showConfirmation, setShowConfirmation] = useState(false);\r\n    const [qst, setQst] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [reloadChat, setReloadChat] = useState(false);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n        dispatch(ListAccount());\r\n    }, [dispatch]);\r\n\r\n    //  DROP ORDER\r\n\r\n    const showDeleteConfirmation = (orderId) => {\r\n        setSelectedOrder(orderId);\r\n        setShowConfirmation(true);\r\n        setQst(\"Are you sure to drop this order ?\");\r\n        setTitle('Drop order');\r\n    }\r\n  \r\n    const deleteOrder = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'Looking for a booster', '')).then(() => {\r\n            LoadData();\r\n            setShowConfirmation(false);\r\n          })\r\n    }\r\n\r\n    // FINISH ORDER\r\n\r\n    const showFinishConfirmation = (orderId) => {\r\n        setSelectedOrder(orderId);\r\n        setShowConfirmation(true);\r\n        setQst(\"Are you sure to finish this order ?\");\r\n        setTitle('Finish order');\r\n    }\r\n  \r\n    const handleChangeStatus = (e) => {\r\n        e.preventDefault();\r\n        dispatch(ChangeStatus(selectedOrder, 'Finished', null)).then(() => {\r\n          LoadData();\r\n          setShowConfirmation(false);\r\n        })\r\n    }\r\n\r\n    // Reload Data\r\n\r\n    const LoadData = () => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n        setSelectedOrder(null)\r\n    }\r\n\r\n    const ranks = [\r\n        \"iron\",\r\n        \"bronze\",\r\n        \"silver\",\r\n        \"gold\",\r\n        \"platinum\",\r\n        \"diamond\",\r\n        \"immortal\"\r\n    ];\r\n\r\n    const divisions = [\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ]\r\n\r\n    const ratingAmount = [\r\n        \" 0-20\",\r\n        \"21-40\",\r\n        \"41-60\",\r\n        \"61-80\",\r\n        \"81-100\",\r\n    ]\r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        progressOrders = orders?.filter(order => order.status === 'In progress' && order.boosterId === userInfo._id);\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        const myId = localStorage.getItem('myId') || false;\r\n        const user = users?.find(u => u._id === myId);\r\n        return (\r\n            <Grid container spacing={3}>\r\n                {/* Select Order */}\r\n                <Grid item xs={12} md={4}>\r\n                    <div className=\"myorder-select\">\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table} aria-label=\"simple table\">\r\n                            <TableHead className=\"custom-thead\">\r\n                                <TableRow>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>Customer</TableCell>\r\n                                <TableCell>Actions</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {progressOrders.map((order) => (\r\n                                <TableRow key={order._id} \r\n                                    className={selectedOrder === order._id ? 'mytablerow active' : 'mytablerow'} \r\n                                    onClick={() => setSelectedOrder(order._id)}>\r\n                                    <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                                    <TableCell>{clients.find(b => b._id === order.userId)?.name}</TableCell>\r\n                                    <TableCell>   \r\n                                        <button\r\n                                            title={order.isPaused ? 'Order is paused by the user' : ''}\r\n                                            disabled={order.isPaused ? true : false} \r\n                                            className={order.isPaused ? 'paid-button gray mr' : 'paid-button green mr'} \r\n                                            onClick={() => showFinishConfirmation(order._id)}>\r\n                                                {order.isPaused ? 'Paused' : 'Finish'}\r\n                                        </button>\r\n                                        <button className=\"paid-button red\"  onClick={() => showDeleteConfirmation(order._id)}>Drop</button>\r\n                                    </TableCell>\r\n                                 </TableRow>\r\n                                ))}\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </Grid>\r\n                {/* Order Informations */}\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper className={classes.paper}>\r\n                        {\r\n                            progressOrders.find(order => order._id === selectedOrder) ? (\r\n                                <div className=\"myorders-infos\">\r\n                                    <h4>\r\n                                        {progressOrders.find(order => order._id === selectedOrder).boostType}\r\n                                        &nbsp;for&nbsp;\r\n                                        {((progressOrders.find(order => order._id === selectedOrder).price / 100) * user.percentage).toFixed(2)}&nbsp;$\r\n                                    </h4>\r\n                                    {\r\n                                        progressOrders.find(order => order._id === selectedOrder).boostType === 'Rank Boosting' ? (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[progressOrders.find(order => order._id === selectedOrder).startRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[progressOrders.find(order => order._id === selectedOrder).startRank - 1]}</span>\r\n                                                        <span>{divisions[progressOrders.find(order => order._id === selectedOrder).startDivision - 1]}</span>\r\n                                                        <span className=\"mini-text\">{ratingAmount[(progressOrders.find(order => order._id === selectedOrder).rankRating / 10) - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <ForwardIcon />\r\n                                                </div>\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[progressOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : progressOrders.find(order => order._id === selectedOrder).boostType === 'Placement Boosting' ? (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[progressOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <h5>{progressOrders.find(order => order._id === selectedOrder).games + ' Games'}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                        ) : (\r\n                                            <div className=\"myorders-rank\">\r\n                                                <div>\r\n                                                    <img src={`/images/ranks/${ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}.png`} alt=\"Rank\" />\r\n                                                    <h3>\r\n                                                        <span>{ranks[progressOrders.find(order => order._id === selectedOrder).desiredRank - 1]}</span>\r\n                                                        <span>{divisions[progressOrders.find(order => order._id === selectedOrder).desiredDivision - 1]}</span>\r\n                                                    </h3>\r\n                                                </div>\r\n                                                <div>\r\n                                                    <h5>{progressOrders.find(order => order._id === selectedOrder).wins + ' Wins'}</h5>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                    <div className=\"bordred-container\">\r\n                                        <div className=\"flex between\">\r\n                                            <span>Boost Queue</span><strong>{progressOrders.find(order => order._id === selectedOrder).duoGame ? 'Duo Boost' : 'Single Boost'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Server</span><strong>{progressOrders.find(order => order._id === selectedOrder).server}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Specific Agents</span><strong>{progressOrders.find(order => order._id === selectedOrder).specificAgents ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>Priority order</span><strong>{progressOrders.find(order => order._id === selectedOrder).priorityOrder ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                        <div className=\"flex between\">\r\n                                            <span>With streaming</span><strong>{progressOrders.find(order => order._id === selectedOrder).withStreaming ? 'Yes' : 'No'}</strong>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"account-informations\">\r\n                                        <div>\r\n                                            <span>Account</span>\r\n                                            <p><strong>{accounts.find(acc => acc.userId === progressOrders.find(order => order._id === selectedOrder).userId)?.name}</strong></p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Password</span>\r\n                                            <p><strong>{accounts.find(acc => acc.userId === progressOrders.find(order => order._id === selectedOrder).userId)?.password}</strong></p>\r\n                                        </div>\r\n                                        <div>\r\n                                            <span>Summoner Name</span>\r\n                                            <p><strong>{accounts.find(acc => acc.userId === progressOrders.find(order => order._id === selectedOrder).userId)?.summoner}</strong></p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"default-display\">\r\n                                    <h4>Order informations</h4>\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Chat */}\r\n                <Grid item xs={12} md={4}>\r\n                    <Paper className={classes.paper}>\r\n                        <div className=\"paper-header\">\r\n                            <div className=\"paper-title\">Chat</div>\r\n                            <div className=\"reload-chat\"><CachedIcon onClick={e => setReloadChat(true)} /></div>\r\n                            <div className=\"button-container\">\r\n                                <select \r\n                                    value={selectedOrder ? selectedOrder : 0} \r\n                                    onChange={e => setSelectedOrder(e.target.value)}\r\n                                    className=\"orders-select\">\r\n                                    <option value={0}>Select Order</option>\r\n                                    {\r\n                                        progressOrders.map(order =>\r\n                                            <option key={order._id} value={order._id}> {order._id.substring(order._id.length - 5)} | {Moment(order.createdAt).format('DD/MM/YY')}</option>\r\n                                        )\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"paper-content chat\">\r\n                            <ChatModule order={selectedOrder} reloadChat={reloadChat} reloaded={e => setReloadChat(false)} />\r\n                        </div>\r\n                    </Paper>\r\n                </Grid>\r\n                <ConfirmModal\r\n                    show={showConfirmation} \r\n                    qst={qst}\r\n                    title={title}\r\n                    onConfirm={e => {title === 'Drop order' ? deleteOrder(e) : handleChangeStatus(e)}} \r\n                    onClose={() => {setShowConfirmation(false)}}>\r\n                </ConfirmModal>\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { MyListOrders } from '../../../actions/orderActions.js';\r\n\r\nexport default function ClientHome(props) {\r\n    const dispatch = useDispatch();\r\n    const { classes, theme } = props;\r\n\r\n    const myId = localStorage.getItem('myId') || false;\r\n\r\n    const myList = useSelector( state => state.myList);\r\n    const {loadingOrders, errorOrders, myOrders} = myList;\r\n\r\n    const [selectedOrder, setSelectedOrder] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (myId) {\r\n            dispatch(MyListOrders(myId));\r\n        }            \r\n    }, [dispatch, myId]);\r\n\r\n\r\n    const ranks = [\r\n        \"iron\",\r\n        \"bronze\",\r\n        \"silver\",\r\n        \"gold\",\r\n        \"platinum\",\r\n        \"diamond\",\r\n        \"immortal\"\r\n    ];\r\n\r\n    const divisions = [\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ];\r\n\r\n    const ratingAmount = [\r\n        \" 0-20\",\r\n        \"21-40\",\r\n        \"41-60\",\r\n        \"61-80\",\r\n        \"81-100\",\r\n    ]\r\n\r\n    if (loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{errorOrders}</MessageBox> );\r\n    } else {\r\n        const myCompletedOrders = myOrders.filter(order => order.status === 'Finished' || order.status === 'Paied')\r\n        return (\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12}>\r\n                    <div className={theme ? \"myorder-select client\" : \"myorder-select\"}>\r\n                        <h3>Orders History</h3>\r\n                        <TableContainer component={Paper}>\r\n                            <Table className={classes.table + 'client-table'} aria-label=\"simple table\">\r\n                            <TableHead className=\"custom-thead\">\r\n                                <TableRow>\r\n                                <TableCell>Date</TableCell>\r\n                                <TableCell>Boost Type</TableCell>\r\n                                <TableCell>Queue</TableCell>\r\n                                <TableCell align=\"center\">Start Rank</TableCell>\r\n                                <TableCell align=\"center\">Desired Rank</TableCell>\r\n                                <TableCell>Price</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {\r\n                                    myCompletedOrders.map(order =>\r\n                                        <TableRow key={order._id} \r\n                                            className={selectedOrder === order._id ? 'mytablerow active' : 'mytablerow'} \r\n                                            onClick={() => setSelectedOrder(order._id)}>\r\n                                            <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                                            <TableCell>{order.boostType}</TableCell>\r\n                                            <TableCell>{order.duoGame ? 'Duo Boost' : 'Single Boost'}</TableCell>\r\n                                            <TableCell>\r\n                                                {\r\n                                                    order.boostType === \"Rank Boosting\" ? (\r\n                                                        <span className=\"flex-align-center j-fs\">\r\n                                                            <img src={`/images/ranks/${ranks[order.startRank - 1]}.png`} alt=\"Rank\" className=\"rank-icon\" />\r\n                                                            <span className=\"cap\">{ranks[order.startRank - 1]}</span>\r\n                                                            <span>&nbsp;{divisions[order.startDivision - 1]}</span>\r\n                                                            <em>&nbsp;{ratingAmount[order.rankRating / 10]}</em>\r\n                                                        </span>\r\n                                                    ) : (\r\n                                                        <span>{order.games}&nbsp;Games</span>\r\n                                                    )\r\n                                                }\r\n                                            </TableCell>\r\n                                            <TableCell>\r\n                                                <span className=\"flex-align-center j-fs\">\r\n                                                    <img src={`/images/ranks/${ranks[order.desiredRank - 1]}.png`} alt=\"Rank\" className=\"rank-icon\" />\r\n                                                    <span className=\"cap\">{ranks[order.desiredRank - 1]}</span>\r\n                                                    <span>&nbsp;{divisions[order.desiredDivision - 1]}</span>\r\n                                                </span>\r\n                                            </TableCell>\r\n                                            <TableCell>{order.price.toFixed(2)}&nbsp;$</TableCell>\r\n\r\n                                        </TableRow>\r\n                                    )\r\n                                }\r\n                            </TableBody>\r\n                            </Table>\r\n                        </TableContainer>\r\n                    </div>\r\n                </Grid>              \r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListUsers } from '../../../actions/userActions.js';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport { ListOrders } from '../../../actions/orderActions.js';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function BoosterFinishedOrders(props) {\r\n    let user, clients, finishedOrders;\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(ListUsers());\r\n        dispatch(ListOrders());\r\n    }, [dispatch]);\r\n\r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        user = users?.find(user => user._id === userInfo._id);\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        finishedOrders = orders?.filter(order => order.status === 'Finished' && order.boosterId === userInfo._id );\r\n        return (\r\n        <TableContainer component={Paper}>\r\n            <span className=\"myorders-title\">My Finished Orders</span>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className=\"custom-thead\">\r\n                <TableRow>\r\n                <TableCell>Id</TableCell>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell>Boost Type</TableCell>\r\n                <TableCell>Boost Queue</TableCell>\r\n                <TableCell>My Price</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {finishedOrders.map((order) => (\r\n                <TableRow key={order._id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                    {order._id.substring(order._id.length - 5)}\r\n                    </TableCell>\r\n                    <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                    <TableCell>{clients.find(b => b._id === order.userId).name}</TableCell>\r\n                    <TableCell>{order.boostType}</TableCell>\r\n                    <TableCell>{order.duoGame ? 'Duo Boost' : 'Single Boost'}</TableCell>\r\n                    <TableCell>{((order.price / 100) * user.percentage).toFixed(2)}&nbsp;$</TableCell>\r\n                    <TableCell><span className=\"status-output paied\">{order.status}</span></TableCell>\r\n                </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Moment from 'moment';\r\nimport LoadingModule from '../LoadingModule.js';\r\nimport MessageBox from '../MessageBox.js';\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: '100%',\r\n  },\r\n});\r\n\r\n\r\nexport default function BoosterPaiedOrders(props) {\r\n    let user, clients, paiedOrders;\r\n    Moment.locale('en');\r\n    const classes = useStyles();\r\n    const userList = useSelector( state => state.userList);\r\n    const {loading, error, users} = userList;\r\n    const orderList = useSelector( state => state.orderList);\r\n    const {loadingOrders, errorOrders, orders} = orderList;\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo } = userSignin;\r\n\r\n  \r\n\r\n    if (loading || loadingOrders) {\r\n        return ( <LoadingModule></LoadingModule> );\r\n    } else if (error ||errorOrders) {\r\n        return ( <MessageBox variant=\"danger\">{error}</MessageBox> );\r\n    } else {\r\n        user = users?.find(user => user._id === userInfo._id);\r\n        clients = users?.filter(user => user.rule === 'client');\r\n        paiedOrders = orders?.filter(order => order.status === 'Paied' && order.boosterId === userInfo._id );\r\n        return (\r\n        <TableContainer component={Paper}>\r\n            <span className=\"myorders-title\">My Paied Orders</span>\r\n            <Table className={classes.table} aria-label=\"simple table\">\r\n            <TableHead className=\"custom-thead\">\r\n                <TableRow>\r\n                <TableCell>Id</TableCell>\r\n                <TableCell>Date</TableCell>\r\n                <TableCell>Customer</TableCell>\r\n                <TableCell>Boost Type</TableCell>\r\n                <TableCell>Boost Queue</TableCell>\r\n                <TableCell>My Price</TableCell>\r\n                <TableCell>Status</TableCell>\r\n                </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n                {paiedOrders.map((order) => (\r\n                <TableRow key={order._id}>\r\n                    <TableCell component=\"th\" scope=\"row\">\r\n                    {order._id.substring(order._id.length - 5)}\r\n                    </TableCell>\r\n                    <TableCell>{Moment(order.createdAt).format('DD/MM/YY')}</TableCell>\r\n                    <TableCell>{clients.find(b => b._id === order.userId).name}</TableCell>\r\n                    <TableCell>{order.boostType}</TableCell>\r\n                    <TableCell>{order.duoGame ? 'Duo Boost' : 'Single Boost'}</TableCell>\r\n                    <TableCell>{(((order.price / 100) * user.percentage)).toFixed(2)}&nbsp;$</TableCell>\r\n                    <TableCell><span className=\"status-output paied\">{order.status}</span></TableCell>\r\n                </TableRow>\r\n                ))}\r\n            </TableBody>\r\n            </Table>\r\n        </TableContainer>\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport BoosterFinishedOrders from './BoosterFinishedOrders.js';\r\nimport BoosterPaiedOrders from './BoosterPaiedOrders.js';\r\n\r\nexport default function CompletedOrders(props) {\r\n    const { classes} = props;\r\n    return (\r\n        <Grid container spacing={3}>\r\n                {/* Finished Orders */}\r\n                <Grid item xs={12}>\r\n                    <Paper className={classes.paper} >\r\n                        <BoosterFinishedOrders />\r\n                    </Paper>\r\n                </Grid>\r\n                {/* Paied Orders */}\r\n                <Grid item xs={12}>\r\n                <Paper className={classes.paper} >\r\n                        <BoosterPaiedOrders />\r\n                    </Paper>\r\n                </Grid>\r\n               \r\n            </Grid>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { EditSetting } from '../../actions/settingActions';\r\nimport MessageBox from './MessageBox';\r\n\r\nexport default function SettingEdit(props) {\r\n\r\n    const {selectedSetting, showEditSetting} = props;\r\n    const [changeValue, setChangeValue] = useState(null);\r\n    const settingEdit = useSelector((state) => state.settingEdit);\r\n    const { feedback, loadingSetting, errorSetting } = settingEdit;\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleCloseEditSetting = (e) => {\r\n        e.preventDefault();\r\n        setChangeValue(null);\r\n        props.onClose();\r\n    }\r\n\r\n    const handleSaveSetting = (e) => {\r\n        e.preventDefault();\r\n        dispatch(EditSetting(selectedSetting._id, changeValue)).then(() => {\r\n            setChangeValue(null);\r\n            props.onClose();\r\n        });\r\n    }\r\n\r\n    const ranks = [\r\n        \"Unranked\",\r\n        \"Iron\",\r\n        \"Bronze\",\r\n        \"Silver\",\r\n        \"Gold\",\r\n        \"Platinum\",\r\n        \"Diamond\",\r\n        \"Immortal\",\r\n        \"Radiant\",\r\n    ];\r\n  \r\n    const divisions = [\r\n        \"Nothing\",\r\n        \"I\",\r\n        \"II\",\r\n        'III',\r\n    ];\r\n\r\n    if (showEditSetting && selectedSetting) {\r\n        return (\r\n            <div className=\"setting-edit-modal show\">\r\n                <button id=\"close-modal\" onClick={e => handleCloseEditSetting(e)} >\r\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                    </svg>\r\n                </button>\r\n                <div className=\"edit-box\">\r\n                <label>\r\n                    {ranks[selectedSetting.rank] + ' ' + \r\n                        divisions[selectedSetting.division] + ' => ' + \r\n                        ranks[selectedSetting.desiredRank] + ' ' + \r\n                        divisions[selectedSetting.desiredDivision]}\r\n                    </label>\r\n                    <input type=\"number\" step=\"0.1\" value={changeValue || parseFloat(selectedSetting.amount)} \r\n                        onChange={e => setChangeValue(e.target.value)}\r\n                    />\r\n                    <button onClick={e => handleSaveSetting(e)}>\r\n                        Save&nbsp;&nbsp;\r\n                        {\r\n                            loadingSetting ? (\r\n                                    <img src=\"/images/loading-buffering.gif\" width='20' alt=\"Loading\" />\r\n                            ) : ( '' )\r\n                        }\r\n                    </button>\r\n                    {\r\n                        feedback ? (\r\n                            <MessageBox>{feedback}</MessageBox>\r\n                        ) : errorSetting ? (\r\n                            <MessageBox variant=\"danger\">{errorSetting}</MessageBox>\r\n                        ) : ( '' )\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n","import React, { useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Route, Switch, Link } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport WbSunnyIcon from '@material-ui/icons/WbSunny';\r\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\r\nimport AdminMenuListItems from './modules/AdminDashbordModules/AdminMenuListItems.js';\r\nimport BoosterMenuListItems from './modules/BoosterDashbordModules/BoosterMenuListItems';\r\nimport ClientMenuListItems from './modules/ClientDashboadModules/ClientMenuListItems.js';\r\nimport ClientHome from './modules/ClientDashboadModules/ClientHome.js';\r\nimport LoadingBox from './modules/LoadingBox.js';\r\nimport ErrorPage from './modules/ErrorPage.js';\r\nimport ProfileTab from './modules/ProfileTab.js';\r\nimport PaiedOrders from './modules/AdminDashbordModules/PaiedOrders.js';\r\nimport AdminListUsers from './modules/AdminDashbordModules/AdminListUsers.js';\r\nimport AdminHome from './modules/AdminDashbordModules/AdminHome.js';\r\nimport BoosterHome from './modules/BoosterDashbordModules/BoosterHome.js';\r\nimport MyOrders from './modules/BoosterDashbordModules/MyOrders.js';\r\nimport OrdersHistroy from './modules/ClientDashboadModules/OrdersHistroy.js';\r\nimport CompletedOrders from './modules/BoosterDashbordModules/CompletedOrders.js';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport { ListSetting } from '../actions/settingActions.js';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport SettingEdit from './modules/SettingEdit.js';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      Valorant Boosting\r\n      {' '}\r\n      {new Date().getFullYear()}\r\n      {'. Created by Maamoun Grissa'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100vw',\r\n    height: '100vh',\r\n    zIndex: '888',\r\n    position: 'fixed',\r\n    top: '0',\r\n    left: '0',\r\n    backgroundColor: '#fafafa',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n    color: '#333',\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n    position: 'relative',\r\n    minHeight: '115vh'\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n    background: '#fff9f8',\r\n    height: 350,\r\n  },\r\n  fixedHeight: {\r\n    height: 350,\r\n  },\r\n  table: {\r\n    minWidth: '100%',\r\n  }\r\n}));\r\n\r\nexport default function Dashbord() {\r\n\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();  \r\n    const [open, setOpen] = useState(false);\r\n    const [showSetting, setShowSetting] = useState(false);\r\n\r\n    const userSignin = useSelector((state) => state.userSignin);\r\n    const { userInfo, loading, error } = userSignin;\r\n\r\n    const settingList = useSelector((state) => state.settingList);\r\n    const { setting } = settingList;\r\n\r\n    const [selectedSetting, setSelectedSetting] = useState(false);\r\n    const [showEditSetting, setShowEditSetting] = useState(false);\r\n    const [theme, setTheme] = useState(true);\r\n\r\n    const ranks = [\r\n      \"Unranked\",\r\n      \"Iron\",\r\n      \"Bronze\",\r\n      \"Silver\",\r\n      \"Gold\",\r\n      \"Platinum\",\r\n      \"Diamond\",\r\n      \"Immortal\",\r\n      \"Radiant\",\r\n    ];\r\n\r\n    const divisions = [\r\n      \"Nothing\",\r\n      \"I\",\r\n      \"II\",\r\n      'III',\r\n    ];\r\n\r\n    const handleSelectSetting = (e, selected) => {\r\n      e.preventDefault();\r\n      setSelectedSetting(selected);\r\n      setShowEditSetting(true);\r\n    }\r\n\r\n    const handleSavedSetting = () => {\r\n      dispatch(ListSetting());\r\n      setSelectedSetting(null);\r\n      setShowEditSetting(false);\r\n    }\r\n    \r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n      if (userInfo && userInfo.rule === 'admin') {\r\n        dispatch(ListSetting());\r\n      }\r\n    }, [dispatch, userInfo])\r\n\r\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\r\n\r\n    if(loading) {\r\n        return <LoadingBox />\r\n    } else if (error){\r\n        return <ErrorPage msg=\"Login to have access to dashbord\" />\r\n    } else {\r\n        localStorage.setItem('myId', userInfo._id);\r\n        const rankBoostingPrices = setting?.filter(s => s.games === 0 && s.win === 0);\r\n        const placementBoostingPrices = setting?.filter(s => s.games > 0);\r\n        const winBoostingPrices = setting?.filter(s => s.win > 0);\r\n        \r\n        return (\r\n            <div className={classes.root}>\r\n              <CssBaseline />\r\n              <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)} data={theme && userInfo.rule === 'client' ? 'client' : 'others'}>\r\n                <Toolbar className={classes.toolbar}>\r\n                  <IconButton\r\n                    edge=\"start\"\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n                  >\r\n                    <MenuIcon />\r\n                  </IconButton>\r\n                  <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n                    {userInfo?.rule === 'admin' ? 'Admin ' : userInfo?.rule === 'booster' ? 'Booster ' : ''}Dashboard\r\n                  </Typography>\r\n                  <div className=\"flex-align-center\">\r\n                    <Link to='/' className='white' ><img src=\"/images/logo.png\" alt=\"Logo\" className=\"logo-style\" /></Link>\r\n                    {\r\n                      userInfo.rule === 'client' ? (\r\n                        <div className=\"flex-align-center\">\r\n                          <WbSunnyIcon />\r\n                          <label className=\"switch\">\r\n                            <input type=\"checkbox\" checked={theme} onChange={e =>  setTheme(!theme)} />\r\n                            <span className=\"slider round\"></span>\r\n                          </label>\r\n                          <Brightness2Icon />\r\n                        </div>\r\n                      ) : userInfo.rule === 'admin' ? (\r\n                          <SettingsIcon id=\"setting-button\" onClick={e => setShowSetting(!showSetting)} />\r\n                      ) : ( '' )\r\n                    }\r\n                  </div>\r\n                  \r\n                </Toolbar>\r\n              </AppBar>\r\n              <Drawer data={theme && userInfo.rule === 'client' ? 'clientDrawer' : 'others'}\r\n                variant=\"permanent\"\r\n                classes={{\r\n                  paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n                }}\r\n                open={open}\r\n              >\r\n                <div className={classes.toolbarIcon}>\r\n                  <IconButton onClick={handleDrawerClose}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </div>\r\n                <Divider />\r\n                { \r\n                  userInfo?.rule === 'client' ? (\r\n                      <ClientMenuListItems />\r\n                  ) : userInfo?.rule === 'booster' ? (\r\n                      <BoosterMenuListItems />\r\n                  ) : userInfo?.rule === 'admin' ? (\r\n                      <AdminMenuListItems />\r\n                  ) : ('Permission Error')\r\n                }\r\n              </Drawer>\r\n              <main className={classes.content} data={theme && userInfo.rule === 'client' ? 'client' : 'others'}>\r\n                <div className={classes.appBarSpacer} />\r\n                <Container maxWidth=\"lg\" className={classes.container}>\r\n        \r\n                    { /* TAB CONTENT */ }\r\n                    <Switch>\r\n                      {\r\n                        userInfo?.rule === 'admin' ? (\r\n                         <React.Fragment>\r\n                            <Route path=\"/dashbord\" exact={true} render={ (props) =>\r\n                              <AdminHome fixedHeightPaper={fixedHeightPaper} classes={classes} setting={setting} />\r\n                            }/>\r\n                            <Route path=\"/dashbord/paiedorders\" exact={true} render={ (props) =>\r\n                              <PaiedOrders />\r\n                            }/>\r\n                            <Route path=\"/dashbord/listusers\" exact={true} render={ (props) =>\r\n                              <AdminListUsers />\r\n                            }/>\r\n\r\n                            <Route path=\"/dashbord/profile\" exact={true} render={ (props) =>\r\n                                <ProfileTab />\r\n                            }/>\r\n                          </React.Fragment>\r\n                            \r\n                        ) : userInfo?.rule === 'booster' ? (\r\n                          <React.Fragment>\r\n                            <Route path=\"/dashbord\" exact={true} render={ (props) =>\r\n                              <BoosterHome fixedHeightPaper={fixedHeightPaper} classes={classes} />\r\n                            }/>\r\n                            <Route path=\"/dashbord/myorders\" exact={true} render={ (props) =>\r\n                              <MyOrders classes={classes} />\r\n                            }/>\r\n                            <Route path=\"/dashbord/completedorders\" exact={true} render={ (props) =>\r\n                              <CompletedOrders classes={classes} />\r\n                            }/>\r\n                            <Route path=\"/dashbord/profile\" exact={true} render={ (props) =>\r\n                                <ProfileTab />\r\n                            }/>\r\n                          </React.Fragment>\r\n                        ) : userInfo?.rule === 'client' ? (\r\n                          <React.Fragment>\r\n                            <Route path=\"/dashbord\" exact={true} render={ (props) =>\r\n                                <ClientHome fixedHeightPaper={fixedHeightPaper} classes={classes} userInfo={userInfo} theme={theme} />\r\n                              }/>\r\n                              <Route path=\"/dashbord/profile\" exact={true} render={ (props) =>\r\n                                <ProfileTab theme={theme} />\r\n                              }/>\r\n                              <Route path=\"/dashbord/history\" exact={true} render={ (props) =>\r\n                                <OrdersHistroy classes={classes} theme={theme} />\r\n                              }/>\r\n                          </React.Fragment>\r\n                            \r\n                        ): ('')\r\n                      }\r\n                        </Switch>\r\n                 \r\n                  <Box pt={4} className={theme && userInfo.rule === 'client' ? 'client-footer' : ''}>\r\n                    <Copyright />\r\n                  </Box>\r\n\r\n                  {\r\n                    userInfo.rule === 'admin' ? (\r\n                      <div>\r\n                        <div className={!showSetting ? \"setting-container\" : \"setting-container show\"}>\r\n                          <div className=\"flex-center-between\">\r\n                            <h3>SETTINGS</h3>\r\n                          </div>\r\n                          <h5>Rank boosting prices</h5>\r\n                          {\r\n                            rankBoostingPrices?.map((mySetting) =>\r\n                              <div key={mySetting._id} className=\"flex-align-center\">\r\n                                <label>\r\n                                  {ranks[mySetting.rank] + ' ' + \r\n                                  divisions[mySetting.division] + ' => ' + \r\n                                  ranks[mySetting.desiredRank] + ' ' + \r\n                                  divisions[mySetting.desiredDivision]}\r\n                                </label>\r\n                                <div className=\"setting-amount\">\r\n                                  <label>{mySetting.amount}</label>\r\n                                  <EditIcon onClick={e => handleSelectSetting(e, mySetting)} />\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          }\r\n                          <h5>Placement boosting prices</h5>\r\n                          {\r\n                            placementBoostingPrices?.map((mySetting) =>\r\n                              <div key={mySetting._id} className=\"flex-align-center\">\r\n                                <label>\r\n                                  {ranks[mySetting.desiredRank] + ' '}\r\n                                </label>\r\n                                <div className=\"setting-amount\">\r\n                                  <label>{mySetting.amount}</label>\r\n                                  <EditIcon onClick={e => handleSelectSetting(e, mySetting)} />\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          }\r\n                          <h5>Win boosting prices</h5>\r\n                          {\r\n                            winBoostingPrices?.map((mySetting) =>\r\n                              <div key={mySetting._id} className=\"flex-align-center\">\r\n                                <label>\r\n                                  {ranks[mySetting.desiredRank] + ' '}\r\n                                </label>\r\n                                <div className=\"setting-amount\">\r\n                                  <label>{mySetting.amount}</label>\r\n                                  <EditIcon onClick={e => handleSelectSetting(e, mySetting)} />\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          }\r\n                        </div>\r\n                        <SettingEdit showEditSetting={showEditSetting} selectedSetting={selectedSetting} onClose={handleSavedSetting} />\r\n                      </div>\r\n                    ) : ( '' )\r\n                  }\r\n                </Container>\r\n              </main>\r\n            </div>\r\n          );\r\n    }\r\n\r\n  \r\n}","import React from 'react';\r\nimport './assets/app.css';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from './components/Header.js';\r\n// import Footer from './components/Footer.js';\r\nimport Home from './components/Home.js';\r\nimport Signin from './components/Signin.js';\r\nimport Register from './components/Register';\r\nimport Dashbord from './components/Dashbord';\r\nimport ErrorPage from './components/modules/ErrorPage';\r\n\r\nfunction App(props) {\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n\r\n  if (window.innerWidth > 600) {\r\n    window.onscroll = function(e) {\r\n      const topBar = document.getElementById('topbar')\r\n      const header = document.getElementById('header')\r\n      if (this.oldScroll > this.scrollY) {\r\n        if (topBar) {\r\n          topBar.classList.remove('hide');\r\n        }\r\n      } else {\r\n        if (topBar) {\r\n          topBar.classList.add('hide');\r\n        }\r\n      }\r\n      this.oldScroll = this.scrollY;\r\n      if (this.scrollY < 5) {\r\n        if (header) {\r\n          header.classList.remove('dark');\r\n        }\r\n      } else {\r\n        if (header) {\r\n          header.classList.add('dark');\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return (\r\n\r\n    <BrowserRouter>\r\n\r\n      <div className=\"App\">\r\n        \r\n        <Header userInfo={userInfo} />\r\n\r\n        <main>\r\n          <img src=\"/images/main-bg.gif\" alt=\"GifBackground\" />\r\n          <div className=\"overlay\">&nbsp;</div>\r\n\r\n          <Route path=\"/\" exact={true} component={Home} />\r\n\r\n          <Route path='/signin' component={Signin} />\r\n\r\n          <Route path='/register' component={Register} />\r\n\r\n          <Route path='/dashbord'>\r\n            <Dashbord userInfo={userInfo} />\r\n          </Route>\r\n\r\n          <Route component={ErrorPage} />\r\n\r\n          \r\n        </main>\r\n\r\n      </div>\r\n\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const BLOG_LIST_REQUEST = 'BLOG_LIST_REQUEST';\r\nexport const BLOG_LIST_SUCCESS = 'BLOG_LIST_SUCCESS';\r\nexport const BLOG_LIST_FAIL = 'BLOG_LIST_FAIL';\r\n\r\nexport const BLOG_DETAILS_REQUEST = 'BLOG_DETAILS_REQUEST';\r\nexport const BLOG_DETAILS_SUCCESS = 'BLOG_DETAILS_SUCCESS';\r\nexport const BLOG_DETAILS_FAIL = 'BLOG_DETAILS_FAIL';","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { accountEditReducer, accountGETReducer, accountListReducer } from './reducer/accountReducers';\r\nimport { blogDetailsReducer, blogListReducer } from './reducer/blogReducers';\r\nimport { chatAddReducer, chatListReducer, myChatListReducer } from './reducer/chatReducers';\r\nimport { myListReducer, orderAddReducer, orderDeleteReducer, orderListReducer, statusChangeReducer } from './reducer/orderReducers';\r\nimport { settingEditReducer, settingListReducer } from './reducer/settingReducers';\r\nimport { boosterAddReducer, boosterDeleteReducer, boosterEditReducer, userEditReducer, userGetReducer, userListReducer, userRegisterReducer, userSigninReducer } from './reducer/userReducers';\r\n\r\nconst initialState = {\r\n    userSignin : {\r\n        userInfo: localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\r\n    },\r\n};\r\n\r\n\r\nconst reducer = combineReducers({\r\n\r\n    userSignin: userSigninReducer,\r\n    userRegister: userRegisterReducer,\r\n    userEdit: userEditReducer,\r\n    userList: userListReducer,\r\n    boosterAdd: boosterAddReducer,\r\n    boosterEdit: boosterEditReducer,\r\n    boosterDelete: boosterDeleteReducer,\r\n    userGet: userGetReducer,\r\n\r\n    orderList: orderListReducer,\r\n    orderAdd: orderAddReducer,\r\n    statusChange: statusChangeReducer,\r\n    orderDelete: orderDeleteReducer,\r\n    myList: myListReducer, \r\n\r\n    chatList: chatListReducer,\r\n    chatAdd: chatAddReducer,\r\n    myChatList: myChatListReducer,\r\n\r\n    accountList: accountListReducer,\r\n    accountEdit: accountEditReducer,\r\n    accountGet: accountGETReducer,\r\n   \r\n    blogList: blogListReducer,\r\n    blogDetails: blogDetailsReducer,\r\n\r\n    settingList: settingListReducer,\r\n    settingEdit: settingEditReducer,\r\n\r\n})\r\n\r\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducer, \r\n    initialState, \r\n    composeEnhancer(applyMiddleware(thunk))\r\n    );\r\n\r\nexport default store;\r\n","import { BOOSTER_ADD_FAIL, BOOSTER_ADD_REQUEST, BOOSTER_ADD_SUCCESS, BOOSTER_DELETE_FAIL, BOOSTER_DELETE_REQUEST, BOOSTER_DELETE_SUCCESS, BOOSTER_EDIT_FAIL, BOOSTER_EDIT_REQUEST, BOOSTER_EDIT_SUCCESS, GET_USER_FAIL, GET_USER_REQUEST, GET_USER_SUCCESS, USER_EDIT_FAIL, USER_EDIT_REQUEST, USER_EDIT_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_SIGNIN_FAIL, USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNOUT } from \"../constants/userConstants\";\r\n\r\nexport const userSigninReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_SIGNIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_SIGNIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_SIGNIN_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        case USER_SIGNOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const boosterAddReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case BOOSTER_ADD_REQUEST:\r\n            return {loading: true};\r\n        case BOOSTER_ADD_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case BOOSTER_ADD_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const boosterEditReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case BOOSTER_EDIT_REQUEST:\r\n            return {loading: true};\r\n        case BOOSTER_EDIT_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case BOOSTER_EDIT_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const boosterDeleteReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case BOOSTER_DELETE_REQUEST:\r\n            return {loadingRemove: true};\r\n        case BOOSTER_DELETE_SUCCESS:\r\n            return {loadingRemove: false, feedback: action.payload};\r\n        case BOOSTER_DELETE_FAIL:\r\n            return {loadingRemove: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userEditReducer = (state = { feedbackEdit: [] }, action) => {\r\n    switch(action.type){\r\n        case USER_EDIT_REQUEST:\r\n            return {loadingEdit: true};\r\n        case USER_EDIT_SUCCESS:\r\n            return {loadingEdit: false, feedbackEdit: action.payload};\r\n        case USER_EDIT_FAIL:\r\n            return {loadingEdit: false, errorEdit: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userListReducer = (state = { loading: true, users: [] }, action) => {\r\n    switch(action.type){\r\n        case USER_LIST_REQUEST:\r\n            return {loading: true};\r\n        case USER_LIST_SUCCESS:\r\n            return {loading: false, users: action.payload};\r\n        case USER_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const userGetReducer = (state = {user : {}}, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_REQUEST:\r\n            return { loadingUser: true };\r\n        case GET_USER_SUCCESS:\r\n            return { loadingUser: false, user: action.payload };\r\n        case GET_USER_FAIL:\r\n            return { loadingUser: false, errorUser: action.payload };\r\n        case USER_SIGNOUT:\r\n            return {}\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CHANGE_STATUS_FAIL, CHANGE_STATUS_REQUEST, CHANGE_STATUS_SUCCESS, MY_LIST_FAIL, MY_LIST_REQUEST, MY_LIST_SUCCESS, ORDER_ADD_FAIL, ORDER_ADD_REQUEST, ORDER_ADD_SUCCESS, ORDER_DELETE_FAIL, ORDER_DELETE_REQUEST, ORDER_DELETE_SUCCESS, ORDER_LIST_FAIL, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS } from \"../constants/orderConstants\";\r\n\r\nexport const myListReducer = (state = { loadingOrders: true, myOrders: [] }, action) => {\r\n    switch(action.type){\r\n        case MY_LIST_REQUEST:\r\n            return {loadingOrders: true};\r\n        case MY_LIST_SUCCESS:\r\n            return {loadingOrders: false, myOrders: action.payload};\r\n        case MY_LIST_FAIL:\r\n            return {loadingOrders: false, errorOrders: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderListReducer = (state = { loadingOrders: true, orders: [] }, action) => {\r\n    switch(action.type){\r\n        case ORDER_LIST_REQUEST:\r\n            return {loadingOrders: true};\r\n        case ORDER_LIST_SUCCESS:\r\n            return {loadingOrders: false, orders: action.payload};\r\n        case ORDER_LIST_FAIL:\r\n            return {loadingOrders: false, errorOrders: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderAddReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case ORDER_ADD_REQUEST:\r\n            return {loading: true};\r\n        case ORDER_ADD_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case ORDER_ADD_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const statusChangeReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case CHANGE_STATUS_REQUEST:\r\n            return {loading: true};\r\n        case CHANGE_STATUS_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case CHANGE_STATUS_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const orderDeleteReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case ORDER_DELETE_REQUEST:\r\n            return {loadingRemove: true};\r\n        case ORDER_DELETE_SUCCESS:\r\n            return {loadingRemove: false, feedback: action.payload};\r\n        case ORDER_DELETE_FAIL:\r\n            return {loadingRemove: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { CHAT_ADD_FAIL, CHAT_ADD_REQUEST, CHAT_ADD_SUCCESS, CHAT_LIST_FAIL, CHAT_LIST_REQUEST, CHAT_LIST_SUCCESS, MYLIST_CHAT_FAIL, MYLIST_CHAT_REQUEST, MYLIST_CHAT_SUCCESS } from \"../constants/chatConstants\";\r\n\r\nexport const chatAddReducer = (state = { feedback: ''}, action) => {\r\n    switch(action.type){\r\n        case CHAT_ADD_REQUEST:\r\n            return {loading: true};\r\n        case CHAT_ADD_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case CHAT_ADD_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const chatListReducer = (state = { chat: [] }, action) => {\r\n    switch(action.type){\r\n        case CHAT_LIST_REQUEST:\r\n            return {loading: true};\r\n        case CHAT_LIST_SUCCESS:\r\n            return {loading: false, chat: action.payload};\r\n        case CHAT_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const myChatListReducer = (state = { chat: [] }, action) => {\r\n    switch(action.type){\r\n        case MYLIST_CHAT_REQUEST:\r\n            return {loading: true};\r\n        case MYLIST_CHAT_SUCCESS:\r\n            return {loading: false, chat: action.payload};\r\n        case MYLIST_CHAT_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { ACCOUNT_EDIT_FAIL, ACCOUNT_EDIT_REQUEST, ACCOUNT_EDIT_SUCCESS, ACCOUNT_GET_FAIL, ACCOUNT_GET_REQUEST, ACCOUNT_GET_SUCCESS, ACCOUNT_LIST_FAIL, ACCOUNT_LIST_REQUEST, ACCOUNT_LIST_SUCCESS } from \"../constants/accountConstants\";\r\n\r\n\r\nexport const accountListReducer = (state = { accounts: [] }, action) => {\r\n    switch(action.type){\r\n        case ACCOUNT_LIST_REQUEST:\r\n            return {loadingAccounts: true};\r\n        case ACCOUNT_LIST_SUCCESS:\r\n            return {loadingAccounts: false, accounts: action.payload};\r\n        case ACCOUNT_LIST_FAIL:\r\n            return {loadingAccounts: false, errorAccounts: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const accountEditReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case ACCOUNT_EDIT_REQUEST:\r\n            return {loading: true};\r\n        case ACCOUNT_EDIT_SUCCESS:\r\n            return {loading: false, feedback: action.payload};\r\n        case ACCOUNT_EDIT_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const accountGETReducer = (state = { account: {} }, action) => {\r\n    switch(action.type){\r\n        case ACCOUNT_GET_REQUEST:\r\n            return {loadingAccount: true};\r\n        case ACCOUNT_GET_SUCCESS:\r\n            return {loadingAccount: false, account: action.payload};\r\n        case ACCOUNT_GET_FAIL:\r\n            return {loadingAccount: false, errorAccount: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { BLOG_DETAILS_FAIL, BLOG_DETAILS_REQUEST, BLOG_DETAILS_SUCCESS, BLOG_LIST_FAIL, BLOG_LIST_REQUEST, BLOG_LIST_SUCCESS } from \"../constants/blogConstants\";\r\n\r\nexport const blogListReducer = (state = { loading: true, blog: [] }, action) =>{\r\n    switch(action.type){\r\n        case BLOG_LIST_REQUEST:\r\n            return {loading: true};\r\n        case BLOG_LIST_SUCCESS:\r\n            return {loading: false, blog: action.payload};\r\n        case BLOG_LIST_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const blogDetailsReducer = (state = { loading: true, blog: {} }, action) =>{\r\n    switch(action.type){\r\n        case BLOG_DETAILS_REQUEST:\r\n            return {loading: true};\r\n        case BLOG_DETAILS_SUCCESS:\r\n            return {loading: false, blog: action.payload};\r\n        case BLOG_DETAILS_FAIL:\r\n            return {loading: false, error: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { SETTING_EDIT_FAIL, SETTING_EDIT_REQUEST, SETTING_EDIT_SUCCESS, SETTING_LIST_FAIL, SETTING_LIST_REQUEST, SETTING_LIST_SUCCESS } from \"../constants/settingConstants\";\r\n\r\nexport const settingListReducer = (state = { setting: [] }, action) => {\r\n    switch(action.type){\r\n        case SETTING_LIST_REQUEST:\r\n            return {loadingSetting: true};\r\n        case SETTING_LIST_SUCCESS:\r\n            return {loadingSetting: false, setting: action.payload};\r\n        case SETTING_LIST_FAIL:\r\n            return {loadingSetting: false, errorSetting: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const settingEditReducer = (state = { feedback: '' }, action) => {\r\n    switch(action.type){\r\n        case SETTING_EDIT_REQUEST:\r\n            return {loadingSetting: true};\r\n        case SETTING_EDIT_SUCCESS:\r\n            return {loadingSetting: false, feedback: action.payload};\r\n        case SETTING_EDIT_FAIL:\r\n            return {loadingSetting: false, errorSetting: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}